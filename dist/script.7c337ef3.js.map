{"version":3,"sources":["script/canvas.js","script/data.json","script/utils.js","script/tile.js","script/state.js","script/board.js","script/ennemyBehaviour.js","script/ennemyAnimation.js","script/ennemy.js","script/pacmanBehaviour.js","script/pacmanAnimation.js","script/pacman.js","script/game.js","script/index.js"],"names":["CANVAS_ELEMENT","document","getElementById","SCORE_ELEMENT","CTX","canvas","getContext","imageSmoothingEnabled","BG_IMAGE","COIN_IMAGE","PILL_IMAGE","ISAAC_SPRITE","ENNEMY_HEAD","ENNEMY_BODY","module","exports","gameData","require","CANVAS_WIDTH","canvasWidth","CANVAS_HEIGHT","canvasHeight","DIRECTION_MATRICES","modulo","n","m","mod","Math","abs","moduloCoord","coord","getDirectionFromCoord","directionObject","Object","entries","find","direction","directionCoord","compareArrays","addCoord","coord1","coord2","map","value","index","substractCoord","distanceBetweenCoords","part1","pow","part2","sqrt","a","b","length","i","TILE_SIZE","tileSize","Tile","initialData","tileType","hasPoint","hasSuperPoint","drawImage","incrementConst","State","initState","score","gameState","board","pacman","ennemies","STATE","BOARD_ARRAY","boardArray","BOARD_WIDTH","BOARD_HEIGHT","Board","boardTiles","initBoard","y","line","x","tile","push","coordX","coordY","width","height","drawTiles","forEach","row","drawTile","currentCoord","directionMatrice","coordToMove","getTile","ANIMATION_DURATION","animationDuration","DIRECTIONS","EnnemyBehaviour","ennemy","init","timestamp","updateState","computePath","state","targetCoord","scatterCoord","possibleTiles","getPossibleTiles","getTarget","tileToMove","computeFarthestTileToTarget","computeNearestTileToTarget","setMovingCoord","possibleDirections","filter","dir","getOppositeDirection","adjacentTiles","getNextTileInDirection","isTilePossible","justSpawned","includes","closestDistance","closestTile","distance","longestDistance","farthestTile","movingCoord","animTimestamp","Date","getTime","computeDirection","window","setTimeout","SPRITE_SIZE","spriteSize","STEP_DURATION","stepAnimationDuration","FRAMES_STEP","framesStep","EnnemyAnimation","stepAnimationTimeStamp","stepAnimation","characterIsOutOfScreen","getCoordToDraw","drawOnCanvas","isAnimationFinished","animationProgress","getProgressOfAnimation","deltaX","deltaY","currentTimeStamp","currentStepDuration","incrementStepAnimation","drawBody","drawHead","save","spriteIndex","isReversed","translate","scale","restore","findIndex","Ennemy","ennemyBehaviour","ennemyAnimation","ennemyData","initialCoord","initialTarget","scatterTarget","spawnTimeout","userInputDirection","beginningGameTimestamp","setFleeMode","cancelFleeMode","canMove","update","draw","POWERUP_DURATION","powerUpDuration","PacmanBehaviour","processTile","nextTile","computePathPacman","currentTile","startPowerUp","addScore","removePoint","setScore","clearTimeout","powerupTimeout","resetPowerUp","bind","isUserInputValid","nextTileUserDirection","confirmUserDirection","nextTileCurrentDirection","timeSinceLastInput","inputTimestamp","PacmanAnimation","isFrameAfterDeath","resetAnimation","drawDeath","decalageSource","decalageDestination","frameCoord","stepAnimationShift","stepAnimationModulo","Pacman","pacmanBehaviour","pacmanAnimation","textContent","ENNEMIES_DATA","ennemiesData","Game","initGame","initEnnemies","bindEventHandler","requestAnimationFrame","loop","progress","lastRender","updateGameState","updateEnnemies","isPacmanDead","setDead","pacmanIsDead","ennemyLoop","isPacmanKilled","fillStyle","fillRect","drawBoard","drawEnnemies","addEventListener","keydownEventHandler","removeEventListener","event","keycode","which","setUserInputDirection","preventDefault","docReady","fn","readyState","game","startGameLoop"],"mappings":"ACAAc,MAAM,CAACC,OAAP,GAAiB;AACb,uBAAqB,GADR;AAEb,AYFJ,2BZE6B,EAFZ;AAGb,gBAAc,EAHD;AAIb,gBAAc,EAJD;AAKb,cAAY,EALC;ADAV,ACMH,AYJJ,IbFaf,KaEJmP,OZIS,CYJlB,CbF2B,ACAV,AYECC,EAAlB,CbF8BnP,CaER,ObFgB,CAACC,cAAT,CAAwB,QAAxB,CAAvB;AKAP,AJOI,AOPJ,ADSA,ADLA,AMJA,ACGI,AFHJ,ADOA,ADFA,ANLA,iBFOmB,EAPF;ADCV,ACOH,AYJA,IbHSC,EaGLF,QAAQ,CAACoP,EbHS,ACOP,GDPUpP,ACDZ,KYIT,GbH6B,CAACC,CaGN,UAAxB,GbHqB,CAAwB,AaGPD,ObHjB,CAAtB,AaG+C,CAACoP,UAAT,KAAwB,aAAlE,EAAiF;ARHrF,AJQI,AOHJ,ADKA,ADLA,AMLA,ACIQ,AFHR,ADOA,APRA,kBFQoB,GATH;ADEV,ACQH,AYJI9G,IbJKnI,AaILmI,GbJQ,GAAGlI,IaID,CAAC+O,CbJM,CAAC9O,AaIR,EAAK,CAAL,CZIK,AYJf,KZNS,CDEE,CAAkB,IAAlB,CAAZ;AKAP,AJSI,AOJJ,AIFA,ACEK,AFJL,GECI,MAGO,SZIQ,CACX;ADTRF,ACUY,AYLJH,GbLL,CAACM,AaKIN,QAAQ,CAAC0O,OZKY,CAAC,EAAD,EDV7B,ACUiC,EAAJ,CDVD,ACSpB,CYJA,CAA0B,GbLlC,eaKQ,EAA8CS,EAA9C;ARJR,ALCO,ACSK,AWRZ,ACGK,AFJL,IXAa5O,AILPwD,QJKe,GAAG/D,MCSM,CAAC,CDTC,CAACC,ACSH,EAAI,EAAJ,CAFtB,SDPgB,CAAwB,SAAxB,CAAjB;ACUK,AYLX,ATTC,mBAAc,EHcc,CAAC,CAAD,EAAG,EAAH,CAHtB;ADND,ACUK,AWTZ,ARNgB,IJKHO,UAAU,GAAGR,GCUG,KDVK,CAACC,cAAT,CAAwB,MAAxB,CAAnB;ACMC,AYCRiP,GZFmB,EAOX,GYLA,CAAC,YAAI;AbNN,ACYK,AWXZ,ACMI,AJdJ,ALEI,ADCJ,IHIazO,ASPPM,ANGFA,EUWMsO,GTZDrL,CSYK,EJdA,ANGF,CUWK,CbPM,CSPNhD,ANGFA,EHIWhB,AaOLuN,CTZjB,EHiByB,CAAC,CQnBN,ANGF,CFgBO,AQnBJ,ANGF,EHIW,ACYD,CDZEtN,CCYN,CADrB,EYJS,EAAb,IJdoB,ANGF,CMHtB,ANGA,GHI0B,CAAwB,MAAxB,CAAnB;ACaK,AYLRoP,ATZD,ESYCA,IAAI,CAAC7B,QAAL,MZK0B,CAAC,EAAD,EAAI,EAAJ,CAFtB;ADVD,ACaK,AKrBZ,AMcA,ACEI6B,AJfJ,ANGA,EUYIA,EbRS3O,AMRPK,AGCAgF,ANGAzC,EUYE,CAACgM,KPhBK,CHIC,EGJEtO,CNQQ,AGJPD,GHIUf,CaQxB,CZK0B,CAAC,AKrBP,AGCA,CRoBM,AKrBL,CHIC,CFiBO,AQpBNe,ANGAwC,CFiBG,CDbM,ACU5B,CDV6BtD,KSPF,ANGnC,CMHoC+F,EHDZ,CAAxB,KNQ4B,CAAwB,QSPpD,KTO4B,CAArB;ACcK,AYLX,AJfD,CIWQ,CAAR,EJXMmF,gBRoBuB,AQpBP,GAAGpK,QAAQ,CAACqK,eAAlC;ATOO,ACSC,AOTR,AFRA,GLUmB,CDFNzK,AQAPI,AFRAgF,AHIevC,CFmBb,OOfM,GRAU,AQAPxC,GRAUhB,IQAH,AFRA,CEQC,EFREe,CNQQ,CAACd,MMRD,CAAC+F,EEQZ,CAAxB,EAEA,ERF2B,CAAwB,SMRnD,GNQ2B,CAApB;ACgBK,AKXZ,AHRE,IGQIC,AGPeoF,OLFnB,GESc,EHRF5H,CGQK,CAAC,ELWS,CAAC,EAAD,CKXV,CLWc,CKXL,CLWC,AEnB3B,CFkBM,CElBmB5B,CGQR,EAAe,AFTpB,EDCZ,EAAgC,GGQf,EAAwB,MAAxB,CAAnB;ADRA,ALIO,ACgBK,AUnBZ,AFCE,ALFE,ADA8B,IEA9Bd,ALISH,AWHPG,OPDGkD,CCAG,AMCE,GNDCjD,ALIS,AWHPA,CPDb,EJIuBhB,CIJV,CAAb,CHoB0B,CIpBR,AJoBS,AUnBP,CNDD,AMCE,CVmBK,EDhBK,ACgBD,CDhBEC,ASFtBmE,CRkBgB,CAFtB,IQhBN,EAAoB,CJFA,AMCE,CNDxB,AMCA,IXG2B,CAAwB,YAAxB,CAApB;ACiBK,AQnBU,ALDlB,IIKiBgG,AFIAlE,OFTZhC,SAAL,CHoB0B,CAAC,CGpBV,CHoBS,EAAI,CAAJ,CAHtB,EGjBJ;ACAJ,AJqBY,AOfV,AFIA,AKTF,APAI,ADDA,IEAEK,AMCAjB,OPAGa,EOAM,ENDE,CMCCpD,APAd,ECDgBA,AGMNc,EPee,GOf3B,CGLwB,CHKL,AGLM0B,CNDC,CAACiB,ACUf2B,MAAZ,AKTF,ELSsB,EDVtB;AACA,AJgBQ,AOXa,AFIC,AKRtB,AFAI,ALAA,ADDA,ADRJ,GDWmB,CIHb1B,AMCA8D,ATTFxH,CD+BI,IQtBCqF,ANDA1C,ECCAU,CFTG,COSR,CAAUA,CJDG,AMCA,ATTFpD,EESX,ADDA,CEAgBD,AMCAA,EFAhB,ANDgB,EAAhB,ADRkB,CAAC,GGQK,AMCA,CNDCyD,AMCAgE,STTP,CGQF,AMCpB,ATTA,CGQwC,CAApB,EAAuBpF,MAA3C;AACA,AJuBY,AUtBZ,AFAG,ALAC,ADDA,IEAEsB,AMCAqB,KRDGlE,ECCAwC,GDDL,EEAc,CFADxC,EEAId,ADCjB,CHsByB,CAAC,CUtBN,ARDpB,CFuByB,EAAI,AUtBNA,ENDE,AJuBA,CIvBCyD,AJsBtB,KUrB2B,CAACwB,INDf,CAAoB5C,MAAzC,MMCA;ANAA,AJuBY,AOnBR,AFIA,AKPJ,APAG,ADDC,ADTJ,IGSMnC,AMCAwH,ATVAxH,KMaGmF,AFIAA,AHRAzC,IKIL,AFIA,CEJU9B,AFIAsE,EDRI,AHTA,CSUC,ARDf,EEAiBpF,AGIjB,ANbiBA,CIiBjB,AKPkBA,ARDF,CFuBU,CAAC,EAAD,CEvB1B,CFuB8B,CIvBL,AHTA,CGSCG,AJuBA,AUtBA,ATVAA,CD8BtB,AUpBuBwH,UND/B,AHTA,WSUA;ANAA,AJuBY,AOnBR,AFID,AMTH,ADEA,ARDI,ADTJ,IGSMvH,AODAJ,ADEA4H,ATVAxH,KMaGkJ,ALJAzG,GSDK,GAAG5C,ADEA,ENDE,AHTA,CSUCD,ENDEA,AHTAA,CDgCQ,CAAC,AWxBP,ATCpB,CSDqB,CXwBK,AOnB1B,CLJqB,CFuBS,AUtBN,CHGD,AGHE6H,CNDC,AJuBA,AChCA,CGSCxH,AJoBvB,AC7BuBA,CCS3B,CKI2B8E,KILP,CAAxB,ADEA,INDA,AHTA,cMa2B,CAAoB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V,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,EAAkE,GAAlE,EAAuE,GAAvE,EAA4E,GAA5E,EAAiF,GAAjF,EAAsF,GAAtF,EAA2F,GAA3F,EAAgG,GAAhG,EAAqG,GAArG,EAA0G,GAA1G,EAA+G,GAA/G,EAAoH,GAApH,EAAyH,GAAzH,EAA8H,GAA9H,EAAmI,GAAnI,EAAwI,GAAxI,CA/BU;AIxBF,AJdC,AMCjB,AIaqB,ADbrB,ADaG,ANCK,ADPJ,CDRJ,GMCMd,AGAAA,IROK,CAAC,CAAD,CIaT,CJba,CKPA,AGAA,APcFI,ADPG,CAAL,CAHuB,CKJhB3C,AGAAA,KPcV,GIdkB,AGAA,APcF,CIdGwC,ADoBpB4C,AIpBoB5C,KPcnB,CGMN,ECpBF,ADoBe,AIpBf;AHCA,ADoBI,AIpBJ,ANYA,ADEQ,ADPJ,IKPEgF,AKmBegF,AFnBfhF,ANYAjE,KAAK,CFLE,CIaJ6B,AJbK,CEKA,AFLD,EAAI,CKPA,AGAA,AROJ,CEKKpC,CEQd,CCpBgBhD,AGAAA,EJoBFoF,CFRJ,EAAd,GGZ4B,ADoBxB,AIpBwB,CHACqC,AGAAA,UHA7B,AGAA;ALaI,AEZJ,ADoBG,AMDD,ADPE,ADZJ,AREkC,CAA3B,GKFDzC,AGAAA,KLYGnB,AMAAwB,EHIP,EGJE,CAAUvE,CPAC,GQOC,CPPZ,AMAA,GNAkB,AEZE,AGAA,ELYpB,CGIG0I,ADhBoBxJ,AGAAA,QHAQ,AGAA,CHACiF,AGAAA,CFgBlC,EAAiB,cDhBnB,AGAA;ALaI,AGIA,ADhBJ,AKkBgB,ADNZ,ADZJ,ANWgB1B,ADEV,ECFUA,EGXVmE,AGAAA,GNWe,ECCZ5D,AMAAqI,APDO5I,EIKPiG,ACHP,ANAS,GAAL,GIba,AGAA,CLYf,EEZkBxJ,AGAAA,CFgBlB,GAAkBwJ,AGJlB,GAAuB,CJZG,AGAA,CHAC7B,AGAAA,ADapB,EEDoB2C,GHI3B,CADe,CAEf,cDjBJ,AGAA,KCY2B,CAAoB,IAApB,CAAvB;ANCD,AEZH,AIYI,ADZJ,ADaI,ALHW,ADGP,IIbF1C,AGAAA,KCYGwE,EFCA7B,ENAI5H,EIbI,AGAA,GHAG3C,AGAAA,GPaZ,CMAJ,EEDA,ARCoB,CMDb,CFZiB,AGAA,ADcxB,CFdyB6H,AIYF,ADZEA,GParB,CQDuB4D,MJZ/B,AGAA,kBCY2B,CAAoB,IAApB,CAAvB;AHKA,ADfJ,AKiBIlI,ADND,ARCK,ADND,IKND2B,KLMU3E,EMSPqE,AFIP,EHPWhC,CIZG,CLMT,CAAgBpC,CKNJ,ALMZ,CKNa,CKiBV0C,AVXgBzC,CAAnB,CCMC,CDNqB,CMSzB,CDfe,AKiBf,ATLoB,EKGA+I,ADfI,CDmBnBlE,AMFS,CAAd,ATLI,CSGQ,CAGZ,GLlBe,EAAkB,CCeH,AFIhC,CEJiCmE,CFIf,CCnBD,EAAwB,MAAxB,CAAnB,CCeI,CAHe,CAKf;AFGA,AGPA,ANAI,ADNJ,IQHiBgC,ERGb/K,GAAG,COMH8J,CHOCjF,CJbK,CAAE/E,CAAC,GAAGC,COMJ,APND,GOMI,APNMA,CIarB,AJbU,IOMUgK,APNMhK,CAA1B,gBOMe,EAAf;ADKA,AFIA,AMHA8C,AFdF,ARGE,IKFiBuE,KLEVpH,EMUFuG,AFIAzB,CJdK,GAAG,CAAN,GUWDrC,AVXWzC,GMUjB,AFIA,AJdoB,GMUD,ANVIC,EQHb0C,CEcV,CVX2B,CMUHuB,ANVIhE,CUWV,EFdpB,ARGyB,CAASH,CQHd,ARGK,CAAhB,EUWP,CVXqCC,GMUrC,ANVA,CMIe,CAQf;ADbF,ADgBC,AMFC,AFhBkB,ADSlB,ANAE,ADLL,SUYQ+L,CHPDjC,CJFN,AFES,GAAL,GSOF,CHPA,EAAc,OFPJpF,KFKA,CELZ,EAAoB;AFMlB,AGQA,ADdkB,AKenB,AHPG,ANAE,WEFCvB,AGQA6B,AGRP,EFESQ,ANAEvD,QEFT,AFEI,CKMJ,EHRkB,AFEE,CKMD6G,CHRnB,CMAoB,AFElB,CAAoBgB,ENAlB,KKMyB,CAACd,ACNA,CAAC5I,KAA7B,ODMF;AACA,AGToB,ADPpB,ADUC,ANAG,ADPP,OOKG,ECRKuE,CCOFvE,CHSE6E,EEhBL,ADUO,ANAE9C,COVCQ,CCOU,KDPpB,GFgBA,GAAoBmG,ALNhB,GAAqB,IAArB,GKM0B,CAACG,aAA/B,oCGTW,CAAC,CAAD,EAAI,EAAJ,CAAS;ANCpB,AGSA,ADfA,AIMA,ADPD,ADUG,ANAE,SITCtE,EFMA,AGSAuE,AFEP,ECjBE,CAAUxE,CFMDrB,CAAC,GAAG,CAAb,AENA,EFMgBA,CAAC,AGSjB,GHToBJ,AGSA6F,QFER,EEFkB,CAACI,CHT/B,EAAkC7F,CAAC,EAAnC,EAAuC,IGSvC;AHRE,AGSF,ADfD,ADiBC,AKXF,AFGI,APPC,SAASlD,EMaP6F,AGTF9B,CNAGZ,CIGCX,CHQC,EDXE,GAAG,ACWA+B,AGRX,CAAYhE,APPX,CGID,AHJsBN,CMaxB,CGTF,EHSqB,AFEX,CAAY2E,AKXF3E,ATJf,EAA4B,CMa/B,ACNE,CDNa,CAcf,AFAA,AKXF,CAFsB,AFKM,CED1B,CFCE;AHSA,AGRD,ANDC,ADNF,SAAO,CAACP,CUYV,ATNS,EGSA,CHTL,EDNY,CAACO,GIeb,EJfkB,CAAC,CAAD,CAAN,EAAWZ,IUYhB,QVZK,CAAP,EAAiCK,MAAM,CAACO,KAAK,CAAC,CAAD,CAAN,EAAWV,aAAX,CAAvC,CAAP;AGIE,AGWF,AFCI,AMHJmD,ADPF,AFEC,ANDK,ADNP,WMcQnC,AGTF6F,ENFI,AFGEtE,CGSD,GDZGsB,CAAC,EGWZ,CHXe,AOSTb,ATNF,CEHF,AMEJ,CHSmB,CHXCa,AFGE,CEHD,AGWnB,AGTiBnD,CCOjB,EPTsB4C,COSR,CDPhB,ARCM,CQNgB,CAOpB,CCKkBE,MPThB,CCYoB,CDZaK,CAAC,EAAlC,CCYyBmB,CDZa,COS1B,EAAd,ENGsB,CAAYR,YAA1B,EAAwC,KAAKQ,MAAL,CAAYM,WAApD,CAAJ,EAAsE;ADXtE,AGWJ,AFCM,AMHNnC,ADJA,ARFI,WKQCsG,AEnBP,GLQU3F,GCYGkB,CDZC,GAAG,AOST/B,ENGA,CAAYqC,CDZCjD,AKRhBY,EEiBH,EJEA,CIFe,CFjBjB,CFmB4B,CEnBf,CFmBX,AIFmB6I,CNGb,GDZS,ACYiB,CDZR1I,ICYa4B,MAAL,AMHjB,CPToB,ACYSO,CDZR5B,AOSpC,CPTmC,CAAX,CAAeE,CAAf,CAAT,EAA4B,CAACA,CAAD,EAAIF,ACYzC,CDZqC,CAA5B,CAAX;AACAC,AGaJ,AFDM,AMHNT,AFjBA,ARGH,UGKOS,CGaC8F,ADpBP,AGDOzG,GLQG,CAACc,ECYEiB,AIpBX,ELQI,CAAUlB,AKRAb,CEiBRC,ENGA,CDZF,ACYcmC,CCnBfL,CGDH,GJoBM,AMHN,ELhBF,CDmB4B,AMHT,CJIjB,ADpBW,GCoBmB,CIJRsH,GJItB,CFDM,QMHW,EAAjB,CAHS,CAKT;APVG,AGaH,ADpBA,ADmBK,AKPL,ADbA,APUE,WKWGxF,ADpBA9B,AIYAhE,ADbA2G,ADWP,ANDS,GAAL,GITF,GAAc3C,AIYd,GAAiB,CHQjB,CGRA,CJZA,CCoBqB,IAArB,EErBA,CDWY,ECXkB,IAA9B;AFuBA,ADrBA,AKiBA7B,ADJA,ADdA,ADWA,ANDI,ADPD,SAASxC,COQR2J,CDWCjF,ADrBAsC,AIaA8B,ADdA7B,EPUIrF,GKYT,GAAa,EIJPQ,AHPS,ANDX,GOVJ,ADWkBI,ANDE,EKYpB,CEtBqB,CAArB,CCcA,CCIA,ATRI,ADPD,CAA+BzC,CSWR,CJb1B,AKiBkB,CDJlB,EJb8B,ALE3B,EAAqC,COQhBsC,CFVxB,AKiBA,IHPkB,CAAY2B,OAAZ,CAAoB,KAAK1B,MAAL,CAAYuB,YAAhC,CAAlB;AJHE,AGeH,ADrBC,ADiBK,AMCL,ADLA,ADdA,APUI,ADPJ,MAAM5D,KKFDgH,AKkBAmC,ADLAqB,ADdAE,ELOE7H,EOYP,MVhBqB,EGInB,CAAgBM,AENlB,ALEwBlD,CSWxB,EJbqB,CFMnB,AENF,AIasB,ADdtB,CLOuB+C,CHJO,CQHL,ARGM9C,CSW/B,CNPE,GKPF,ERGwB,CAAeZ,kBAAf,EAAmCa,IAAnC,CAAwC,gBAA+B;AGK9F,AENF,ADiBK,AMCL,ADLC,ADdD,ADWC,APT+F,UOS3FuJ,CEGCM,UFHU,CAACnI,GEGhB,UFHA,EAA+B;AJHhC,AMOA,AFHG,ANFA,ADR6F,QAA7BzB,KOU3DuJ,IPVwF,QOU7F;AHOA,AGND,ANFG,ADT2F,QAAlBtJ,GMqB/E,EFJS,SAAL,AJjB6F,YMqBnF;AACZ,AFJI,AH5BJ,WKgCKiI,ADpBP,AKiBA,AFlBA,GJiBU,WChBLhE,AGDAA,CFqBH,CAAqByE,ODpBvB,AGDA,EHCgB,AKiBA,AFlBA,EFqBd,EFJsB,KAAK3E,MAAL,CAAYR,YAA1B,EAAwC,KAAKQ,MAAL,CAAYO,YAApD,CAAJ,EAAuE;AEK5E,ADpBC,ADgBM,AMCN,AFlBA,ADUA,ANDD,ADVK,UKEA,AGDA,ADUA+E,CJJN,AOYOiC,ADJP,ATfarL,IKEF2G,AGDAA,EJiBE7C,IGPI,CAACxC,CHOV,CAAY6C,AJlBM,CAAC3E,EUmBzB,CPZMA,CCWA,AKHC,CFJH,APXoB,EIkBE,AJlBMO,CGOlC,CII8BqJ,CJJf,EELT,AGDA,EHCJ,ADgBM,AIjBN,EHCmC,AGDA,IDUI,CAAC7H,APXhB,CAApB,YOWJ,EAAuD;AJHvD,AELE,ADgBG,AMCLyE,ADJA,ADdE,ADUA,APXD,GAFuB,CAAxB,EUqBAA,IPZIxG,AMQA,CAAC,CCIC,CAAC8L,AHRAhC,EJJP,CMQUxC,CNRC,IIIT,CAAc,EAAd,UGQF,CAA6B,ADJxB,EAAL,EAAiC,CCICyE,IAAL,CAAU3B,IAAV,CAAe,IAAf,CAA7B;APXE,AELD,AKiBF,ADJG,ADdD,ADUCR,QAAAA,IJJItG,MAAM,CIIC,CAACyG,CJJC,UIIb,SJJoB/J,KAAK,CAAC,CAAD,CAAZ,EAAiB4C,WAAjB,CAAb;AACA,ACSG,AKDJ,AFJA,APZD,MAAI1C,KMsBN,CHdQqD,MAAM,GAAG,AHRf,EAAqB,cMsBN,GHdOvD,KAAK,CAAC,CAAD,CAAZ,EAAiB6C,YAAjB,CAAb;AACA,AGcF,ADpBA,ADeI,AIfJ,ADWD,APbC,UKEG,AGAC,CFoBC2F,ADpBD,AJON,ADTStI,IGQE,AKNAqC,CHAA0E,IFMKlE,CKNV,CAAY4B,IFoBhB,ANtBsB,CMsBDuE,AEpBjB,ARFmB,CAAD,CAAtB,CGQS,CAAgB3F,CKNC,EPOd,GEDH,CENT,AGAI,CLM6BD,CEND,CCoBhC,CEpBoC,CAAC,ELM5B,CAAP,EKNwCsH,iBAA1C,EAA6D;ALO5D,AGeF,ADrBG,AIcF,ADdE,APOF,ADTC,WUmBH,ADHOS,ARPAvJ,EIPEmF,AGAA2D,MPOP,GAAgB,GSUbpG,CDHH,CAAqB4E,ARPrB,GOPE,GCcF,ADd2B,CEiB7B,CLjBI,CKiBY,CFjBZ,CHA8B5E,SAA9B;AFOH,AENE,ADcC,AMGF,ADHD,ADdG,APOF,ADTH,UUmBOwH,CTVCjK,EGOE,AIdA8I,KEiBK,ENHV,CMGarG,GTVf,GOPE,APOmB,COPCA,EEiBE,ETVxB,CSU2B,IFjBzB,CEiB8ByH,UAAhC;ANFI,AMGJ,AFjBC,APOF,WSUMA,AHPP,UGOE,GAAkBzH,KHPX3D,IGOP,CHPF,EAAgB;AFVd,ADCA,AMkBA,AHRA,APXG,SAASJ,CKAR0C,CCqBN,ADrBE,AKmBKkG,AHRA9G,EFXEU,CAAP,CKmBA,CAAU+I,CHRV,APXG,COWShC,APXStJ,MUmBrB,AVnBG,EUmBiB8D,AHRpB,APX6B7D,COWR8B,CDUf+B,INrBH,EAAkC,CUmBrC,EJEF,EAAmB,GCVUpC,KAAN,GAAcvB,KAAnC;ADWA,AFND,AMIC,AFlBA,ADUD,APXC,SAAOH,CMqBH,AEpBD,CLKL,AGeO,AIFA0I,ADFP,ADhBM,IRDS,CMqBHJ,AEpBD/B,ARDKrG,CUmBd,CAAYoL,CVnBL,CAAW,MUmBlB,EAAsBxH,CDFfpC,CTjBYvB,EGMT,EMWZ,CTjBoB,CSiBJ,CCEd,AVnB0BC,CMqB1B,AEpBA,EFoBkC,AEpBF,ERDd;AGOlBxC,AGeE,AD9BY,AK6BdkI,ADHA/D,ADhBE,ARFgB,MUqBlB+D,KTbF,ADRsC3F,CUqB9B,CJCCmI,AIDA8C,AFnBA7E,GRFkC,EGOrCjF,EHPyCrB,CSkBvCyB,KAAN,ATlBmD,CGOnD,AHPoDtB,CGOtCpC,CMWA0D,ERVL,CDR0C,CKA1C,ALAS,CUqBlB,ADHA,CHIE,AID2B,AFnB3B,GFoB8BoC,ADtBlB4C,AGEkB5C,EEmBEuH,IPdlC,AOc6B,CAAU3B,CPdf,CAAxB,AGeE,AEpBA,ELKyB,AOcE,CPd7B,AOc4C,EPddlM,AEPrB,EARK,AK6Be,CAA7B,oBPd6CsF,KAA7C,EAAoDtF,uBAAeuF,MAAnE;AGgBE,AIDH,ADHCpF,ADhBC,APMD,ADTkB,GAAX,CAAP,MCSI,KKcK,ALdAyD,KKcP,GLdF,EAAmB,GQULyJ,WAAd,GAA4B9I,eAAML,KAAlC;ANXA,AGgBC,ADhCa,AI4Bf,ARVC9D,ADTH,WGOQoF,ACSP,AGJA,SJLE,AFEI1B,SAAJ,CACErD,IGMU,CGJC,aNHb,EAEE,KAAKqB,KAAL,CAAW,CAAX,IAAgByB,SAFlB,EAGE,KAAKzB,KAAL,CAAW,CAAX,IAAgByB,SAHlB,EAIEA,SAJF,EAKEA,SALF;AEDD,ACSC,AIdA,ADUA,ANGC,UObG0B,CAAJ,ADUKZ,ECVEU,CAAP,GDUA,CAAY0B,KAAZ,GAAoB,SAApB;ADYA,AD1BCxB,ADmBD,AJlBH,MKDIA,CARa,GD2BR2B,CMKR,EJEUN,SAAS,CFPE,EEOC,CFPE,CMKjBwH,GJEoBhD,CFPEjE,IMK7B,EAAiBP,SAAjB,CNLwB,CMKI,CNL1B,GEOO,GAA4C,KAAKsE,YAAxD;AACD,AD3BK7F,AKyBJ,AFlCc,ADyBdR,ANGA,MInBIQ,CARU,GJ2BV,CQGN,IRHWlB,MMHHS,ONGN,CMHA,CAAemB,ANGS,GOdf,IDWT,CCXcyD,ADWS,IEMH9G,MFNIgE,GEM1B,CDjBW,CCiBsB,CD/BjB,ADyBS,EAAY;AFfnC,ADmBA,AMMA,ADHA,AFNEA,ANGA,ADjBC,QOcDA,CPdUvD,CIiBR+D,CDTN,AEVOuC,AKyBA6E,ADHAnD,CRHG9G,EMHA,CAACgH,QFhBT,ADmBiB,AJjBd,CKFe9F,ADmBA5B,AJjBSb,CKF3B,CKyBA,AHTE,ANGoB,CInBDuC,CAArB,CIsBA,ARHyB,CInBDuB,ADmBpB,AJjBD,CCiBD,CETQ,AMYgBlE,ATpBSK,CIiBR,CAAvB,IJjBD,CKFH,ADmBiC,CJjBU,CSoB3C,GLHsC2D,MAAL,CAAYK,KAAZ,KAAsB,OAAtB,IAAiC,KAAKL,MAAL,CAAYK,KAAZ,KAAsB,MAApF,CAAJ,EAAiG;ADRjG,AEVD,ADmBG,AKGF,ADjCc,AD2Bb,APdD,OOYA,EPZOjE,EGQFqC,AMYA2H,ELHE1F,EJjBM,CAACpE,GAAP,CAAW,CGQlB,CAAgB+C,ACSd,GKGF,GAAsB,CNZtB,CAAwB,AHRL9C,ESoBOwF,GTpBR,CSoBI,CTpBIvF,ESoBOwF,CNZR1C,EHRP,CGQM,EAAS,CMYX,EAAtB;ANXEA,ACSD,AMKD,ADFD,ARHGtF,ADlBgB,OIaN,CDJVsF,ACUF,EMIInB,CPdC,AGgBP,ANzBsC5B,CGS9B8C,IHTmC,GGSvC,CAAY,AFSR3B,ADlBuCrB,KUuBnC0B,CVvByC,CAACvB,ECkBlD,CETasC,AFUXxE,EDnB+C,CMyBxC0B,ANzBO,CGSJ,AOcV,EPdoB,GOcA,GJE1B,EAAwB,AIFtB,EAA+B,ETL7B,EAEE,KAAKN,KAAL,CAAW,CAAX,IAAgByB,SAAhB,GAA4BQ,cAAc,GAAC,CAF7C,EAGE,KAAKjC,KAAL,CAAW,CAAX,IAAgByB,SAAhB,GAA4BQ,cAAc,GAAC,CAH7C,EAIER,SAAS,GAAGQ,cAJd,EAKER,SAAS,GAAGQ,cALd;AEREmB,AGgBJ,AIFEX,AFvBDU,ADgBD8G,ANQG,ADzBe,GAAX,CAAP,EQCC9G,ADgBD8G,CC9Bc,GLuBV7G,CGgBC9C,GHhBG,CAACuD,GIOG,CAAC,CDSb,GHhBI,AGgBavD,AIFTiC,CHPUA,KGOhB,CAAa6G,AHPF,CAAYc,CDSzB,IIFE,SHPU,CAAZ;AJNG,AGgBJ,AE1BKjH,ADiBJ,ANQC,ADzBJ,MQAOA,CAdU,ELsBZ,EETJ,AEkBOV,MAAL,CAAY2H,cAAZ,GAA6BzD,UFlBN,AEkBgB,CAAC,KAAK0D,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,EAA+Bd,gBAA/B,CAAvC;AJNC,AEXD,ADmBA,AMKE,AFvBF,ADiBD,OJXC,GEPI,ADmBArE,CKGN,ADrBOoC,EEuBE8E,ELxBE7H,KDmBT,CCnBI,CAAY6B,CGChB,CAAkBhD,CAAlB,EEuBE,AFvBmBF,CEuBCuB,AFvBtB,EAAwBA,GHDpB,CAAwB,CAAxB,EKwBF,EFvBF,EHDmC,CIsBf,CJtBhB,IAAqC,KAAKF,MAAL,CAAYR,YAAZ,CAAyB,CAAzB,MAAgC,CAAzE,EAA4E;AFY7E,AEXG,AKwBD,ADFD,ADrBD,ARFF,aSuBU,EJtBE,GIsBGA,CJtBV,WIsBK,KAAsB,KAAKqC,WAAlC;AJrBC,ADkBD,AMMD,ADFA,ULJK,CESN,IFTW7B,MAAL,CAAYK,KESXH,AFTD,KAAsB,IES5B,EAAkB,AFThB,EAAkC;AEUlC,AFTES,AJnBC,QImBDA,CJnBUjE,CM4BR,CAAC,ACVP,KDUYsG,EFTE,GAAG,KAAKpC,IJnBjB,CAA+BxE,IM4B7B,ACVQ,EDUb,AN5BG,EM4B8B,AN5BSC,MAAvC,EAA+C,MImBnC,CAAiCmE,aAAjC,CAAb;AEUF,AD5BA,ADmBC,AGDD,APlBA,MAAI7D,CIiBJ,GEWI,AD5BA,AEkBA,CJPN,AGiBO,AE3BP,ARDW,EIoBJgE,CJpBOpF,CKAHyE,AEkBA/B,CDUC4G,EN5BM,CAACjI,EKAb,AEkBA,CFlBYiF,AEkBAxB,APlBJ,CM4BP,AFRU,AJpBMjE,CM4BH8D,EFRA,CGFd,EPlBuB,CAAC,CIoBLW,AJpBI,COkBD,APlBL,CM4BhB,AD5BD,CC4BJ,AD5B4B,CAAxB,AGCSX,ARDoB7D,CM4BH,KD5BK,AEkBnC,APlBuC,CKAnC,ALAoC,CGWnBmD,AIOgB,APlBE,CQCzC,ARDc,EKA4B,AGChB,ARDoB,CAAhC,CAAZ,GKA6CQ,IFW/C,EAAqChE,AEXK,ADoBtB,CCpBkCwD,ADoBFgB,QDTpD,EAAgD,EEXN,CAAyB,ADoB/C,CCpBsB,ADoBnC,MCpBmE,EAAxE,EAA4E;AFY5E,AGkBA,AD7BE,AGCF,ADiBE,APlBF,MAAI3D,IGWA,CAACb,AGkBAkI,AILP,ADFA,ADrBOtB,ARDI,EOkBF3E,CPlBK1C,CKAH,GLAO,CKAd,AEkBA,APlBeqB,CGWb,AIOUyD,EPlBF,CAASjE,CGWH,AKVlB,CLUmBoD,AIOjB,CDWF,CAAqBsF,AE5BA,CAArB,ADiBsB,CPlBK,CSsBnB,ATtBoB,CAAD,CAAN,CM6BrB,CAA4B5E,CN7BK7D,COkB/B,CJPF,COagB,CPbiB,EHXM,CAAC,CM6BxC,AN7BuC,CAA3B,EAAgC,CAAhC,CAAZ;AGYE,AGkBH,AD7BE,ADmBD,AMKA,ADFA,ADrBA,ARDA,SAAOd,CImBH,AMKA,CNLCoF,AKGAN,ADrBAsC,ERDM,CAAC7F,CGWH,AOaAgL,CDFT,ETtBO,CSsBM,ATtBInL,CGWf,CCQF,EAAiB,CJnBK,CSsBtB,ECEI,AVxBqBE,EUwBzB,CNjBY,CAcZ,AMGyB,CVxBlB,CQCP,ARDA,GQC8BqD,SAA9B;ALWC,AOaC/B,ADFH,ADrBA,ADgBGA,APjBL,uBUwBWF,AHPAC,MGON,CAAa6J,CHPb,CAAe1I,KGOf,EHPA,CAAuB,UAACW,MAAD,EAAY;AFjBrC,ADqBA,AGHIA,UAAAA,CHGCc,ECrBE,GEkBG,CAAC8D,CFlBX,ODqBA,CAAoBjE,KGHhB,KHG0B,CAACjF,KAA/B;ADRA,AEZD,ADqBA,AMGGyC,AHNC,APnBN,SOiBK,CJJEsB,CGiBN,YILU1B,GPZY,GAAG7C,GOYrB,GJKWoF,AILO,KAAlB,MJKJ,EAA4B,OHjBgBtE,SAAnB,CAAvB;AACA,AGiBA,AILC,AHNA,UJNG0D,AGiBA,CGPN,ADrBA,IF4BWW,KAAL,CHjBW,GAAG,CGiBC,AGPhBH,MHOC,GGPN,CHO+B,CGPf,IHOoBG,KHjBPZ,AGiBE,AE5BN,KF4BqB,MAA5C,EAAoD,GHjBlC,EAA2BD,EGiBc,KAAP,KHjBlC,CAAlB;AACA,AGiBA,AILD,ADFC,ADrBA,ADiBD,APnBI,SAAStD,CQER,CCqBC8K,ENVE7I,AGiBA,EE5BEF,MAAL,CAAY4D,ARFb,CAAuB9E,CAAvB,ESuBH,ATvB6BC,CSuBR+H,ATvBlB,CGaU/G,CHbkB,ESuB/B,CAA0BkC,CNVnB,AKXH,CLWeP,AKXS,CAAxB,IF4BiBW,EHjBd,AMUP,ADrBmC,CLWRZ,CKXvB,IAAqC,GF4BlC,EAA2B,AE5BYzB,CLWvC,CAAP,GGiBuCuB,CE5BE,CAAYA,UF4B9C,CAAP,CE5ByC,CAAyB,CAAzB,MAAgC,CAAzE,EAA4E;ALY7E,AGiBA,AGPA,ADrBG,ARFJ,WKAA,ADqBF,IInBa,IAAP,oBJmBa,GCrBK;AACpB,ADoBe,AIlBd,ARFH,MAAG,CAAAzC,CAAC,KKAK,ILAN,CKAWiD,GLAXjD,CAAC,EKAK,CAAYyC,QLAlB,IKAM,KAA6B,GLAnCzC,CAAC,CKAuCiD,ALArC/C,MKAgC,ALAnC,CKA+C4E,KLAlC7E,CAAb,KKAD,QLAcA,CAAb,uBAAaA,CAAC,CAAEC,MAAhB,CAAH,EAA6B,OAAO,KAAP,CAFI,CAIjC;AKDC,WKyBD,AHPA,wBGOe,KHPK;AHElB,AMMA,AFxBA,ADiBA,APjBD,OAAI,GIkBCuC,AMMAwI,AFxBA,CF4BN,AN5BS9K,CAAC,GQACe,ARAA,CAAV,EAAYf,CAAC,EQAR,CJkBY,AMMA,AFxBA2E,ARAH9E,CAAC,CAACE,CIkBI,AMMA,KNNK+C,AMMxB,AVxBD,EAAuB9C,CQAlB,ARAmB,CQAK,CAAxB,ARAL,CIkBoB,CAAYsC,AJlBL,IQAS,CF4Bf,AE5BhB,IAAoC,GJkBxC,CADe,CAEf,AInB6CvB,MAAL,CAAYuB,YAAZ,CAAyB,CAAzB,MAAgC,EAAxE,EAA4E;AF6B5E,AE5BE,ADiBF,APjBD,QAAGzC,CAAC,COiBC,APjBAG,COiBC,APjBF,CAAD,CM4BK,EE5BE,CDiBCe,APjBFjB,CAAC,CM4BGwC,AN5BFtC,CQAR,ARAO,CAAV,EOiBM,APjBS,COiBGlB,MPjBI,CM4Bd,ECXH,EPjBU,CM4Be,CCXC,CAAC,GDWG6F,ECXEkE,SDWpC,OCX+B,EAA/B,EAAwD;ADYzD,AFVC,AMKAkC,AFvBC,ADiBC,APjBF,MUuBAA,INLIlH,CCpBN,KKyBY,EAAG,KAAK,IAAI7D,CNLA,AMKC,GNLE4C,AMKC,CAAb,EAAgB5C,CAAC,ELzBhB,CKyBmBiB,GNLE,CAAC6C,MAAX,CAAkB,IMKJ9C,MNLK+C,EMKX,CNLU,AMKKhE,MAAnC,EAA2CC,CAAC,EAA5C,EAA+C;ALxB5D,ADmB2C,AMMzC,AHND,OAJiB,CAMlB,EFrBI2B,CAAJ,CKyBMmB,CLzBCrB,CAAP,CDmBoDsC,GAAG,AMM3C,GAAG9C,CNN4C,KAAI,CAAC+C,QMM3ChD,QAAN,CAAehB,CAAf,CAAb,CNNyD,EAAhB;AAAA,AIjB3C,ARAA,OIiByB,CAAzB,CJjBO,IQAA,ARAP,KQAA;AHAA,ADkBA,AMME,AFvBH,ARAA,UKDK,ADkBAiE,CEWN,CILQnB,GLxBGgD,GKwBG,CAACkF,INNI,GAAGnH,OMMd,CLxBF,AKwBwB5C,ELxB5B,EC6BgB,AD7BgB,MDkBM,CAAC7B,GAAnB,CAAuB,AMMT2B,MAAN,CAAauB,GNNGxD,SAAD,AMMrC,CAAJ,CNNwD,CMMF;AJMxD,AD7BE,ADkBA,AMMEgM,AHLJ,UGKIA,AHLAhC,GDUG,ED7BE,ADkBA7H,EEWT,GD7Bc6B,EKwBE,GAAG,CLxBV,CAAYR,EKwBjB,CNNWxB,CGCU,GAAGG,CHDnB,CAAYiD,GClBnB,UEmBgCpD,KAAN,CAAYoD,GHD/B,CAAmC5B,YAAnC,EAAiDxD,IGC9B,CAC1B,IHFO,CAAP,AGEKiC,MAAL,CAAYuB,YADc,EAE1B,KAAKvB,MAAL,CAAYwG,kBAFc,CAA5B,CAPkB,CAYlB;ADMD,AD7BE,ADkBA,AMMG,OL7BU,ADqBM,CCfpB,ADeA,QMQUwD,UAAN;ANJJ,AMKG,WFxBL,EJmBS9G,aAAa,CAACH,MAAd,CAAqB,GInBd,OJmBelC,IAAD,EAAU;AACpC,AMKD,AFxBD,ADsBA,UCtBID,ADsBA,CCtBJ,ADsBImH,ECtBGrH,CAAP,CJmBS,KAAI,CAAC0C,WGGW,GHHhB,CAAoBvC,IAApB,CAAP,AGGE,IAAAkH,qBAAqB,WAArB,YAAAA,qBAAqB,CAAEzI,QAAvB,MAAoC,MAAxC,EAAgD;AFtBhD,ADoBC,AGGC,OHLK,CAAP,EClBI0F,CC6BN,ECNSgD,YDMJ/F,ED7BkB,GAAG,GEuBtB,CDMJ,CD7B+BgD,CC6Bf,qBD7BU,EAAxB,CAPc,CASd;AC4BA,AFTD,AMIC,AFxBA,ADuBE,UCvBE,CF6BCiB,AE7BA,EEwBE6D,EHDEhC,CCvBC/H,MAAL,CAAYjC,EEwBjB,CJKA,CAAqB+I,IAArB,CAA0B7E,AE7BtB,IAA0B,ADuB5B,KDMF,AE7BmCjC,MAAL,CAAYoC,KAAZ,KAAsB,MAApD,EAA4D;AF8B7D,AD5BC,AKuBD,AFxBG,ADuBD,OAhBiB,CAkBlB,EFxBI8C,MAAM,GAAG,KAAKnD,MAAL,CAAY6B,WAAZ,CAAwB,CAAxB,IAA6B,KAAK7B,MAAL,CAAYR,YAAZ,CAAyB,CAAzB,CAA1C;AACA,AGDEX,QAAAA,CAAC,CHCCuE,EGDE,IHCI,CGDCnF,EHCE,IGDP,CHCY+B,AGDAR,MHCL,CAAYqC,KGDnB,CAAyB,CAAzB,CAAJ,GHCW,CAAwB,CAAxB,IAA6B,KAAK7B,MAAL,CAAYR,YAAZ,CAAyB,CAAzB,CAA1C,CAXc,CAad;AGFEb,QAAAA,CAAC,EJoBL,CIpBQ,KAAKV,MAAL,CAAYuB,WJoBLV,CIpBP,CAAyB,CAAzB,CJoBR,AIpBI,EJoBiB;ACjBnBD,ADkBA,AIpBC,ADuBD,MFrBAA,CAAC,AGND,GHMI,ADkBA,AGGAqH,CGAN,EFtBO,EHCIlG,ADkBAA,EInBA,IHCL,ADkBA,CClBYR,ADkBA8B,AInBFrD,GEsBXyJ,GFtBM,CAAYrH,IJmBrB,AMGF,CLrBM,AGDK,ADsBmB,CFrBC,ADkBA,AMGhBH,CLrBT,CEqB2B/B,ECtBA,CHCGgF,IKqBpC,ELrB0C,AKqBhB,CFtBnB,EHCsCF,AGDF,GDsBJjF,KAAN,CAAYoD,QFrB3C,cEqB+B,CAC7B,KAAKnD,MAAL,CAAYuB,YADiB,EAE7B,KAAKvB,MAAL,CAAYjC,SAFiB,CAA/B,CAnBkB,CAwBlB;AFzBA2C,ADkBE,AMGF,AFtBE,MHCFA,CAAC,GAAG,KAAKqB,ADkBA,CAAC,KClBN,CAAYR,ADkBP,EAAS,MAAT,EAAiB,EClBtB,CAAyB,CAAzB,EDkBK,EClByB4D,ADkBA7B,MClBM,EDkB/B,CClBkC0B,ADkBAnE,IAAI,CAACvB,QAAvC,CAAP,GClBF,CAfc,CAkBd;ADgBC,AMGDvD,AFtBE,YAAIiJ,MEsBFkF,SAAJ,EFtBuB,CEsBP,EFtBU,KAAKjF,EEsB/B,oBFtB0B,EAAxB,CAFuC,CAGvC;AHGF,AEsBA,UAAI,CAAAgD,EFtBG,CAACrH,CAAD,EAAIF,CAAJ,CAAP,gBEsB4B,SAAxB,IAAAuH,wBAAwB,WAAxB,YAAAA,wBAAwB,CAAE3I,QAA1B,MAAuC,MAA3C,EAAmD;AFrBpD,ADeC,AMGAvD,AFrBE,ADyBA,YCzBImJ,CJkBC,AGOArC,CHPAhC,IAAI,AMGPsJ,AFrBQ,GAAG,KEqBf,AFrBoBnK,CJkBb,AMGM,AHIX,CGJF,AHIsBiI,EGJN,CNHTpH,AMGP,CFrBe,CEqBIlF,AFrBQiI,EJkBhB,SIlBI,CAAwB,CJkBhC,AIlBQ,IAA6B,EDyBE,CAACnG,ECzBEuC,CEqBfiB,ENH3BJ,AGOL,GGJF,AFrB4C,CJkBjC,AIlB6CU,CJkB1CjC,AMG2B3D,QNHlC,GIlBqC,CAAyB,CAAzB,CJkBjB,AIlBzB,MJkBF,GMGwDuF,MAAxD,EAHwB,CAIxB;ANHD,AIlBG,ADyBA,YCzBIiE,GDyBG8C,GCzBG,GAAG,KAAKjI,MAAL,CAAY4D,MDyBzB,KCzBa,CAAwB,CAAxB,IAA6B,KAAK5D,MAAL,CAAYuB,YAAZ,CAAyB,CAAzB,CAA1C,CALuC,CAOvC;ADwBD;AGJDrB,AFnBEU,ADwBH,QCxBGA,CAAC,EHCL,CGDQ,KAAKZ,IEmBLD,EFnBA,CAAYwB,EEmBlB,CAAY6I,SAAZ,AFnBM,CAAyB,CAAzB,IAA8BlF,CHCfjD,KGDqB,GAAG+C,CHC/C,EAAiC,cGD7B;AHEF,AGDEtE,QAAAA,CAAC,EHCEiE,ADeP,CIhBQ,KAAK3E,MAAL,CHCN,AGDkBuB,YAAZ,CAAyB,CAAzB,IAA8B4D,KJgBX5C,CIhBiB,GAAGyC,SJgB/C,EAA0C,MIhBtC,CATuC,CAWvC;AHAF,ADeA,AMEA,AFhBC,UJcG3C,CCfCsC,AKiBA0F,UNFU,EMEf,CLjBA,ADekB,AMEApI,GLjBG,EDeEF,GCfG4C,CKiB1B,ENFkB,CAAYtC,SCfT,EDerB,CCf0CkC,WAA1C;AACA,ADeA,UAAIhB,CCfCmB,AEuBP,cHRqB,GAAG,IAAtB,CCfA,EEuBajH,CFvBiBwE,IEuBhC,EAAsB,GFvBpB;AACD,ADeC,AMCA/B,AFfA,ADqBoB,UHPhBsD,GIdE,CAAC5C,CAAD,EAAGF,CAAH,CAAN,EJce,AMCTV,GNDY,GMClB,CNDA,AMCa8G,IAAb,CAAkB7E,SAAlB;ANCAM,AMAD,AFfA,MJeCA,AMGF,aNHe,CAACnB,OAAd,CAAsB,UAACP,IAAD,EAAU;AAC9B,AMGJ,AHEE,WAAKb,CHLCyD,KGKN,CAAYrB,EHLE,GAAG,AGKjB,GAAoB,QAApB,uBHLuCvB,IAAI,CAACpD,KAA3B,EAAkC4E,WAAlC,CAAf;AMIJ,AHEE,WFtBF,AEsBOrC,MAAL,CAAY4D,WAAZ,GAA0BnG,KAA1B,QFtBuB;AACvB,ADgBE,AGMF,UFtBI2H,CGCN,ADqBOpF,CHNCuD,KGMN,CAAYM,QFtBQ,CDgBC,EChBE,EEsBvB,CHN0B,CChBCC,CEsBC,EHNtB,CChBiB,CEsBSA,EFtBEC,ADgBAN,EGMN,CCrBPxB,EDqBkB8B,EFtBhB,CDgBmB,CChB1C,EDgB6CR,CIf/C,ADqB8B,ECrBG,ADqB/B,YHNE,EAA4D;ACf9D,ADgBIA,AIfJ,ADqBAU,MAAAA,IHNIV,AIfA,EDqBE,CFtBC,AEsBAW,CFtBCkB,CGCCpF,MAAL,CAAYoC,CDqBhB,CAAkB,CHNC,EIff,CJekBqB,EChBE,EGCE,CHDC,GDgBvB,AGMoB,EFtBQ1B,AGC5B,IAAgC,EHDT,CAAY8B,EGCEc,WHDlC,EGC6B,EHDoBhD,CGCC,CAAzD,EAA4D,cHD5D;AACD,ADgBK6B,AIfF,ADqBA,QAAA,EHNEA,GIfGmB,ADqBD,CAAC3E,MAAL,CHNa,AGMDuB,GHNIV,EIfhB,EJeE,CIfmB,CAArB,GDqBA,GAA2BpD,KAA3B;AHLC,AIfD,ADqBD,OAFD,EAEGkE,EGLL,EFhBS+C,cDmBP,QGHa,AFhBX,GAA8BzC,SAA9B;AJgBD,AMCD,AFhBC,ADqBF,OHZC,AIZA,GEmBMhC,GFfD,KEeS,GAAG,EAAjB;ANAA,AMCAgJ,AFfE,MEeFA,KLjBF,EDgBSzF,AIdAmB,MEeM,CAACvD,INDd,EIdE,CEeF,CAAsB,KLjBXR,CAAb,EAAgBF,CAAhB,CKiByByF,CLjBNlE,SAAnB,AKiBwB,ELjBM,AKiBU;ALhBtC,ADgBD,AMCGhC,AFdA,QEcAA,ELjBEoF,GGGGV,GEcG,CAAC7D,IAAT,CAAc,IAAIkF,AFdlB,GHHqB,AGGA,GHHG/D,EGGE0C,OHHO,AKiBnB,CAAWwB,ELjBW,GGGf,EHHoBzB,CGGCH,EEc5B,CAAd,QFdA,UHHF;AKkBC,AFdC,OEYF,IHQF,ECpBSG,sBAAL,GAA8BzC,CDoBhB,QCpBd;AHHF,AKkBA,AFdC,ADoBD,UFxBGoD,AEwBC6C,GGNGjI,QAAP,OHMsB,CFxBA,EEwBG,CFxBAoE,GEwBIP,IAAJ,GAAWC,GFxBpC,EAAuC,EEwBd,KAAuB,KAAK/D,MAAL,CAAYmI,cAA5D;AFvBE,AKkBH,AFdA,ADoBC,UAAGD,CHPL,ECjBS5C,eEwBc,GAAG,IFxBtB,AEwBF,CFxB8BrD,CEwBA,OAAO,CFxBnC,GDiBwBM,AGOI,aHPhC,EAA2C;AChBxC,ADiBD,AGOA,UHPIF,GGOG,KAAKrC,GHPG,GAAG,AGOX,CAAYwG,IHPIzE,MAAL,CAAYM,OGO9B,IHPA;AACA,AGOD,UHPKqB,eAAe,GAAG,IAAtB;AChBA,ADiBA,UAAIC,CCjBC4B,AKiBP,AFdA,QHHE,CAAc3E,CAAd,CDiBgB,CCjBCF,CAAjB,CDiBmB,IAAnB,MMAauB,SAAf,CFdyB,CEcC;ALhBxB,ADkBAM,AMDArC,AFdA,MJeAqC,IIfI6C,CHHCI,QAAL,ADkBa,CClBC5E,ADkBAQ,CClBd,AKiBMnB,ELjBWS,CAAjB,EGGoB,CJepB,CAAsB,CMDtB,AFduB,CEcRU,GFdY0C,IEc3B,AFduB,CJeAjD,AMDA,EFdWkD,EJeZ,EAAU,GIfT,CEcChC,CFdxB,KEcuB,EAAY;ALhBpC,ADkBG,AMDAA,AFdF,QEcEA,GHMJ,CHLQ0B,CIfC,CEcC,AFdA2B,CEcCyB,KNCK,CMDZ,CAAc5E,CNCC,OIfO,CEctB,EFdyB,KAAKjC,KDoBX,CCpBM,CAAY6D,YJeAhD,CIfhC,GJeoC,CAACpD,AIfYkE,KJevC,EAAkCU,WAAlC,AIfjB,CJeE;AMAD,AFdF,ADoBC,OGRA,IHQKrC,MAAL,CAAYjC,SAAZ,GAAwB,KAAKiC,MAAL,CAAYwG,kBAApC;AHLE,AMAH,AHMA,YHNO9C,eAAe,KAAK,IAApB,IAA4BD,QAAQ,GAAGC,eAA3C,EAA4D;AAC1DA,UAAAA,CCjBN,cDiBqB,GAAGD,CCjBf7C,CAAT,EAAYF,CAAZ,EAAc,CDiBR;AChBJ,ADiBIiD,UCjBEjE,ADiBFiE,CIdN,WJckB,ECjBI,CDiBD9C,ECjBI,CAAvB,CDiBI,IIdOD,CAAb,EAAgBF,CAAhB,EAAmBuB,SAAnB,EAA8B;AJezB,AIdH,UAAIoD,CEaN,kBFbyB,GAAGpD,CEafA,QFbwB,CEarC,EAAwB,AFbgB,KAAKyC,sBAA3C;AHFA3I,ADiBC,AMDDmE,ONLA,WCXIuF,GKgBExF,CLhBN,OKgBA,CAAemB,OAAf,CAAuB,UAACW,MAAD,EAAY;ANEnC,AMDEA,AFdF,QEcEA,EFdCsD,GJeI1B,CMDC,CAACmD,IAAP,CAAY7E,KNCd,IMDE,AFdoB,GAAGoC,aAAzB,EAAuC;AHDvCzD,ADiBD,AMDE,AFdC,MHFFA,CAAC,AKcD,GLdIA,CAAC,EGEE0E,CHFCpG,SAAJ,GAAgBQ,SGElB,CAA4BuC,IHFI,GAAG,CAArC,CGEE;AHDFvB,AKgBD,AFdE,MHFDA,CAAC,GAAG,CAACA,CAAC,GAAG,GAAL,IAAYxB,SAAZ,GAAwBQ,cAAc,GAAG,CAA7C;AAEA,UAAIgG,WAAW,GAAG,CAAlB;AACA,AGAA,UHAIf,AGAA,CJgBN,IIhBW3E,MAAL,CAAYoC,CHAC,GAAG,CGAhB,IHAqBuC,CDgBf,AIhBgB,MAA1B,EAAkC,IHAlC;AACA,ADgBA,AIhBE,UHAEgB,ADgBA,CAAC,AMDP,EFfS4C,GJgBGxG,IChBI,EDgBT,AIhBH,CHAe,ADgBAK,AIhBAxB,CAAf,EAAkBF,CAAlB,CHAF,ADgBI,KAAuB,MMDV,CNCjB,EAAoC;AACpC,AMDA9E,AFfC,MEeDA,CFjBA,IJkBKmG,EIfA,CEcG,CAACuI,ENCT,CAAYjH,WAAZ,EMDA,CNC0B,AMDA,KNC1B,IMDA,EAAqC,KAAKkH,mBAAL,CAAyB1C,IAAzB,CAA8B,IAA9B,CAArC;ALdA,ADgBA,AMDD,AFdG,UHDC,CDgBE9F,EIfEwD,EHDCxD,EDgBR,CAAYM,GChBT,AGCD,CHDatE,AGCC6C,CAAd,EAAiBF,CAAjB,GJeF,EChBG,CDgBuBR,IChBG,MAA1B,IAAoC,CDgBPF,IChBY+B,EDgBlB,CAAa6B,GChBA,CAAY7F,ODgBnD,EChBuC,KAA0B,OAAjE,EAAyE;AACvE2H,ADgBH,AIfG,QHDAA,KGCKF,MHDM,EGCX,CHDc,AGCA5E,CHDd,AGCA,EAAiBF,CAAjB;AHAD,AGCA;AACF,WEaD,8BAAqB;ALbnB,AKcA9E,MAAAA,ILdI,CDeN,GMDU,CLdCmG,AKcAyI,MLdL,CAAYzM,SAAZ,GKcJ,CAA6B,CLdC,GDeb,GCfjB,EAAsC,AKctC,EAAwC,KAAKwM,mBAA7C;ALbE5E,ADeF,AMDD,QLdGA,EDeI3H,QCfM,GAAG,GDeK,CCflB,EDeqB,2BAAe,KAAK+D,MAAL,CAAY6B,WAA3B,EAAwC,KAAK7B,MAAL,CAAYR,YAApD,CAAvB;ACdC,ADeD,WIfF,EJeS,iBIfCX,CAAV,EAAaF,CAAb,EAAgB,WJee1C,cAAtB,CAAP;AACD,AIfC,UAAMwK,cAAc,GAAG,CAAvB;AHCA,AGAA,UHAG7D,AGAG8D,CEaR,YLbkB,GAAG,CAAnB,EAAqB,AGAI,GAAG,EAA5B,MEakBgC,KAApB,EAA2B;ALZvB/E,AKaF,AFbA,QHAEA,EKaEgF,AFbEhC,OEaK,ELbE,CKaC+B,AFbE,GAAG,CACjB,CEYiB,CAACE,KAApB,CADyB,CAGzB;ALdEhG,AGAE/D,QHAF+D,AGAE/D,CAAC,EJeP,AIfS,CAAL,SHAa,GAAG+D,aAAa,GAAG,CAAhC,EDekB;ACdnB,ADeD,AMDA,AFfUjE,QAAAA,CAAC,CEePgK,CFfS,GJgBL,GMDG,ENCE3I,GMDG,EAAZ,CNCI,CAAYhE,EMDE2M,ONCtB,AMD6B,KAAK,EAAlC,EAAsC;ANEpC,AMDAxK,AFhBA,OADiB,EAEjB,IJgBK,IAAL,MMDMF,MAAN,CAAa4K,qBAAb,CAAmC,MAAnC;ALbF,ADeI,AIjBAhK,QAAAA,CAAC,CHED+E,CGFG,CAAL,KJiBS,GCfX,EAAgB,CDeZ;ACdF5J,ADeE,AMFF0O,AFhBQ/J,QEgBR+J,AFhBQ/J,CAAC,EAAE,EEgBN,CAACmK,MLbFjF,QKaJ,CLbA,CAAehF,CAAC,GAAG1B,SAAnB,EAA8BwB,CAA9B;AKcD,AFjBC,OEUuB,AFZN,CEoBnB,CFjBE;AHGA3E,ADeA,AIlBE6E,QAAAA,CAAC,EAAE,CAAL,CJkBK,MAAL,CCfIiF,KAAJ,CAAU,CAAC,CAAX,EAAc,CAAd;ADgBE,AInBMnF,QAAAA,CAAC,EAAE,MJmBF,IAAP;ACfFE,ADgBE,AMFJ,AFlBE,OAHiB,CHOjBA,CAAC,AGHD,CEiBE8J,ELdE,CAAJ,IKcS,KAAK,EAAZ,IAAkBA,OAAO,KAAK,EAAlC,EAAsC;ALbpChK,AKcAR,AFlBEU,QHIFF,AGJEE,CHID,AGJE,EAAE,CHIF,AGJH,CHIA,UKcMZ,MAAN,CAAa4K,qBAAb,CAAmC,OAAnC;ALbD,ADeC,AIpBQlK,QAAAA,CAAC,EAAE,EJoBN,MAAL;AACE,AMFJ+J,AFnBE,OAJiB,CEuBnBA,AFvBA,KEuBK,CAACI,GNEK,OAAP,IMFJ;ALZA9O,ADeI,AMFH,OAZwB,CAazB,ULdI0D,SAAJ,CACEjD,mBADF,EAEEmI,aAAa,GAAGR,WAFlB,EAGEuB,WAAW,GAAGvB,WAHhB,EAIEjF,SAJF,EAKEA,SALF,EAME0B,CANF,EAOEF,CAPF,EAQExB,SAAS,GAAGQ,cARd,EASER,SAAS,GAAGQ,cATd;AGLA3D,kBAAI0J,IAAJ;AHiBA1J,ADIE,aAAK,KCJH+J,EDIF,KCJF;AAGD,ADEK,AMFJ,AFlBA,UEkBI4E,AFlBE3J,MAAM,CJoBD,AMFA,EFlBIH,CAAC,EEkBA,CNEZ,AIpBe1B,CEkBf,IAAkBwL,IFlBP,GEkBc,AFlBEjC,KEkBG,EAAlC,EAAsC,UFlBY,GAAG,CAArD;AJqBI,AMFFvI,AFlBF,UAAMc,MAAM,GAAG,CAACN,CAAC,EEkBTV,CFlBY,EAAL,GEkBb,CAAa4K,AFlBY1L,SAAZ,GAAwBuJ,SEkBrC,CAAmC,IAAnC,KFlBwD,GAAG,CAA7D;;AJqBE,AMFFgC,AFjBA1O,QEiBA0O,GLAF,EKAO,CAACI,IFjBFpL,SAAJ,CEiBA,AFhBEnD,CHgBKsE,CAAT,EAAYF,CAAZ,EAAe,aGjBb,EAEEgI,UAAU,CAAC,KAAK/D,aAAN,CAAV,CAA+B/D,CAA/B,GAAmCuD,WAAnC,GAAiD,CAAjD,GAAqDqE,cAFvD,EAGAE,UAAU,CAAC,KAAK/D,aAAN,CAAV,CAA+BjE,CAA/B,GAAmCyD,WAAnC,GAAiD,CAAjD,GAAqDqE,cAAc,GAAG,GAHtE,EAIEtJ,SAAS,GAAG,CAAZ,GAAgBsJ,cAAc,GAAG,CAJnC,EAKEtJ,SAAS,GAAG,CAAZ,GAAesJ,cAAc,GAAG,CALlC,EAMEzH,MANF,EAOEC,MAPF,EAQE9B,SAAS,GAAG,CARd,EASEA,SAAS,GAAG,CATd;AHiBa,ADGT,AMFH,OAjBwB,CAkBzB,SNCW,EAAP;AAdJ,AIMAnD,kBAAI+J,OAAJ;AHMA,ADID,AIRA,UHIOpG,cAAc,GAAG,CAAvB;AKEA,UAAIgL,OAAO,KAAK,EAAZ,IAAkBA,OAAO,KAAK,EAAlC,EAAsC;ALAtC3O,AKCEmE,kBLDEuF,IAAJ,CKCQzF,MAAN,CAAa4K,qBAAb,CAAmC,MAAnC;WNGJ,AIPA,kBAAShK,CAAT,EAAYF,CAAZ,EJOejD,AIPD,KJOd,EAAsB;ACFpBmD,ADEoB,AMFpB6J,AFJA,MHIA7J,CAAC,CKAD6J,ELAI7J,AGJElB,CHID,EKAA,CLAGR,AKAF2L,SLAF,CGJgB,EHIAnL,CGJG,CEIvB,AFJA,YHIkC,GAAG,CAArC;AACAgB,AKAC,MLADA,CAAC,GAAG,CAACA,CAAC,GAAG,GAAL,IAAYxB,SAAZ,GAAwBQ,cAAc,GAAG,CAA7C;AAEE,ADAF,AMDD,AFJC3D,UHKM2J,CDAD3D,MAAL,CAAY6B,AILR6B,GHKa,CGLjB,EHKoB5D,KDApB,GAA0BpE,ECAI,CAACsI,EDA/B,OCAoB,CAAqB,UAAChI,SAAD;AAAA,ADCzC,WAAKgE,ICDmDhE,EDCxD,CAAY8F,MCDqD,KAAK,EDCtE,GCD0E,ADC9C,CCD+C9B,GDC3C+B,GCDsC,CAAY/F,ADCtD,GAAWgG,MCDE,CDCb,EAA5B;ACDyC,ADEzC,AILAnD,MAAAA,CHGoB,AGHnB,CHGC,EGHEA,CJKCmB,AILA,GAAG7C,GJKR,CAAYnB,KILR,GAAgB2B,CJKpB,GAAwB,KAAKsE,KILK,GAAG,CAArC,OJKwB,EAAxB;ACDA,ADEAC,AILAvD,MJKAuD,AILAvD,CAAC,GHGGgF,AGHA,CAAChF,CJKC,AILA,CJKCwD,EILE,GAAL,GHGW,CGHChF,CJKhB,CAAkB,ECFE,CAAC,CAArB,EAAwBwG,CGHpB,GAAwBhG,EJKJ,KCFW,GAAG,CAAd,GGHkB,GAAG,CAA7C;AHIA,ADEE,AIJF,QJIE,ECFEiG,AGFAD,IJIE,CAAC3D,KCFO,CDEZ,AIJa,CJIDR,CCFG,CGFC,CAAlB,GHEA,MDEE,GAA2B9D,KAA3B;AACD,AIJD,OJEA,EAEGkE,CIJCgD,aAAa,GAAG,CJEpB,IIFyBA,aAAzB;AHEA,ADGD,AIJC,UHCI,AGDAgE,KHCK5G,MAAL,CAAYhE,MGDM,GHClB,AGDqB,CAAzB,IHC8B,MAA9B,EAAsC;AACpC4H,AGDF,QHCEA,EGDEiD,QHCQ,GAAG,IAAb,IGDqB,GAAG,CAA1B;AHEElD,AGDF,QHCEA,EGDEC,SHCS,CGDC,EHCE,CAAd,AGDe,KAAjB;AHEC,WDEH,uBAAc;AACZ,AIHA,UJGI,AIHD,KJGM5D,AIHD/B,MJGJ,AIHD,CJGaoC,AIHDrE,KJGX,IIHD,CJGuB,IIHG,KJGzB,CIHD,GJGoC,CIHA,IJGKgE,CIHA/B,KJGL,CAAYoC,AIHZ,CAAYrE,IJGZ,KAAsB,AIHtB,KAA0B,EJGjE,EAAsE,GIHtE,EAAyE;AHEzE,ADEE,AIHA2H,QAAAA,EHCEC,GDEG5D,MAAL,AIHW,CHCb,ADEcK,ECFE,AGDA,CAAd,EJGA,GAAoB,MAApB;ACDArG,ADEA,AIHA4M,QAAAA,KJGK5K,OCFD6H,EDEJ,GAAiB,CIHC,CJGlB,ECFA,AGDqB,CHCNhF,AGDf,CHCgB,GAAG1B,SAAnB,EAA8BwB,CAA9B;ADGD,AIFA;AHAC3E,ADGH,oBCHO8J,KAAJ,CAAU,CAAC,CAAX,EAAc,CAAd;AGEF,UAAI,KAAK7F,MAAL,CAAYjC,SAAZ,KAA0B,MAA9B,EAAsC;AHDpC6C,AGEA+E,QHFA/E,AGEA+E,CHFC,GAAG,CAAJ,KGEU,GAAG,IAAb;AHDAjF,AGED,QHFCA,CAAC,EDGL,CCHO,CAAH,wBDGa;ACFd,ADGD,UAAI,KAAKqB,MAAL,CAAYK,KAAZ,KAAsB,MAA1B,EAAkC;AAChC,AIDFuC,MAAAA,OJCO5G,MIDM,GJCX,CIDe4K,EJCE,EAAjB,cIDF;AHDA5M,ADGE,aAAKgG,KCHHtC,CDGF,CAAY2C,KAAZ,ECHF,CACE7F,ADEoB,OAApB,YCHF,EAEEmJ,WAAW,GAAGvB,WAFhB,EAGE,CAHF,EAIEjF,SAJF,EAKEA,SALF,EAME0B,CANF,EAOEF,CAPF,EAQExB,SAAS,GAAGQ,cARd,EASER,SAAS,GAAGQ,cATd;ADIC,AIDD,OJFA,GIEGiF,GJEE,KAAK5C,KIFM,CJEX,CAAYK,EIFGwG,GJEf,GAAoB,OAApB,MIFL,EAAwC;AHSxC7M,ADND,AIFG2J,QAAAA,UHQEI,CGRS,MHQb;AACD,AGRGnB,QAAAA,aAAa,GAAGA,aAAa,GAAGiE,mBAAhC;AACD;WJEH,gCAAuB;AACrB,AIDA,UAAIjD,CJCC5D,MAAL,CAAYhE,EIDZ,EAAgB,KJChB,GAAwB,KAAKkF,oBAAL,EAAxB;AACD,AIDGlH,oBAAI6J,SAAJ,CAAehF,CAAC,GAAG1B,SAAnB,EAA8BwB,CAA9B;;AACA3E,oBAAI8J,KAAJ,CAAU,CAAC,CAAX,EAAc,CAAd;;AACAjF,QAAAA,CAAC,GAAG,CAAJ;AACAF,QAAAA,CAAC,GAAE,CAAH;AACD;;AAED3E,kBAAI0D,SAAJ,CACEnD,oBADF,EAEEqI,aAAa,GAAGR,WAFlB,EAGEuB,WAAW,GAAGvB,WAHhB,EAIEjF,SAJF,EAKEA,SALF,EAME0B,CANF,EAOEF,CAPF,EAQExB,SAAS,GAAGQ,cARd,EASER,SAAS,GAAGQ,cATd;;AAYA3D,kBAAI+J,OAAJ;AAED;;;WAED,kBAASlF,CAAT,EAAYF,CAAZ,EAAe;AACb,UAAMhB,cAAc,GAAG,CAAvB;;AAEA3D,kBAAI0J,IAAJ;;AAEA7E,MAAAA,CAAC,GAAGA,CAAC,GAAG1B,SAAJ,GAAgBQ,cAAc,GAAG,CAArC;AACAgB,MAAAA,CAAC,GAAG,CAACA,CAAC,GAAG,IAAL,IAAaxB,SAAb,GAAyBQ,cAAc,GAAG,CAA9C;AAEA,UAAIgG,WAAW,GAAG,CAAlB;AACA,UAAIf,aAAa,GAAG,KAAKA,aAAL,IAAsB,CAAtB,GAA0B,CAA1B,GAA8B,CAAlD;AACA,UAAIgB,UAAU,GAAG,KAAjB;AACA,UAAIgD,kBAAkB,GAAG,CAAzB;;AAEA,UAAI,KAAK3I,MAAL,CAAYjC,SAAZ,KAA0B,IAA9B,EAAoC;AAClC4K,QAAAA,kBAAkB,GAAG,CAArB;AACD;;AACD,UAAI,KAAK3I,MAAL,CAAYjC,SAAZ,KAA0B,OAA9B,EAAuC;AACrC4K,QAAAA,kBAAkB,GAAG,CAArB;AACD;;AACD,UAAI,KAAK3I,MAAL,CAAYjC,SAAZ,KAA0B,MAA9B,EAAsC;AACpC4K,QAAAA,kBAAkB,GAAG,CAArB;AACAhD,QAAAA,UAAU,GAAG,IAAb;AACD;;AAIDhB,MAAAA,aAAa,IAAIgE,kBAAjB;;AAEA,UAAIhD,UAAJ,EAAgB;AACd5J,oBAAI6J,SAAJ,CAAehF,CAAC,GAAG1B,SAAnB,EAA8BwB,CAA9B;;AACA3E,oBAAI8J,KAAJ,CAAU,CAAC,CAAX,EAAc,CAAd;;AACAjF,QAAAA,CAAC,GAAG,CAAJ;AACAF,QAAAA,CAAC,GAAE,CAAH;AACD;;AAED3E,kBAAI0D,SAAJ,CACEnD,oBADF,EAEEqI,aAAa,GAAGR,WAFlB,EAGE,CAHF,EAIEjF,SAJF,EAKEA,SALF,EAME0B,CANF,EAOEF,CAPF,EAQExB,SAAS,GAAGQ,cARd,EASER,SAAS,GAAGQ,cATd;;AAYA3D,kBAAI+J,OAAJ;AACD","file":"script.7c337ef3.js","sourceRoot":"..","sourcesContent":["export const CANVAS_ELEMENT = document.getElementById(\"canvas\");\nexport const SCORE_ELEMENT = document.getElementById(\"score\");\nexport const CTX = canvas.getContext(\"2d\");\nCTX.imageSmoothingEnabled = false;\n\nexport const BG_IMAGE = document.getElementById(\"bgBoard\");\nexport const COIN_IMAGE = document.getElementById(\"coin\");\nexport const PILL_IMAGE = document.getElementById(\"pill\");\nexport const ISAAC_SPRITE = document.getElementById(\"isaacSprite\");\nexport const ENNEMY_HEAD = document.getElementById(\"ennemyHead\");\nexport const ENNEMY_BODY = document.getElementById(\"ennemyBody\");\n","module.exports = {\n    \"animationDuration\": 200,\n    \"stepAnimationDuration\": 80,\n    \"framesStep\": 10,\n    \"spriteSize\": 32,\n    \"tileSize\": 32,\n    \"boardWidth\": 28,\n    \"boardHeight\": 31,\n    \"canvasWidth\": 840,\n    \"canvasHeight\": 930,\n    \"powerUpDuration\": 10000,\n    \"ennemiesData\":[\n        {\n            \"initialCoord\" : [12,13],\n            \"initialTarget\" : [13,11],\n            \"scatterTarget\" : [1,26],\n            \"spawnTimeout\" : 2000\n        },\n        {\n            \"initialCoord\" : [13,13],\n            \"initialTarget\" : [13,11],\n            \"scatterTarget\" : [1,1],\n            \"spawnTimeout\" : 4000\n        },\n        {\n            \"initialCoord\" : [14,13],\n            \"initialTarget\" : [13,11],\n            \"scatterTarget\" : [26,1],\n            \"spawnTimeout\" : 6000\n        }, \n       \n        {\n            \"initialCoord\" : [15,13],\n            \"initialTarget\" : [14,11],\n            \"scatterTarget\" : [26,29],\n            \"spawnTimeout\" : 8000\n        }\n    ],\n    \"boardArray\": [\n        [\"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\"],\n        [\"X\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \"X\", \"X\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \"X\"],\n        [\"X\", \".\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\"],\n        [\"X\", \"O\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"O\", \"X\"],\n        [\"X\", \".\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\"],\n        [\"X\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \"X\"],\n        [\"X\", \".\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\"],\n        [\"X\", \".\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\"],\n        [\"X\", \".\", \".\", \".\", \".\", \".\", \".\", \"X\", \"X\", \".\", \".\", \".\", \".\", \"X\", \"X\", \".\", \".\", \".\", \".\", \"X\", \"X\", \".\", \".\", \".\", \".\", \".\", \".\", \"X\"],\n        [\"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\"],\n        [\"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\"],\n        [\"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\"],\n        [\"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"-\", \"-\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\"],\n        [\"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"h\", \"h\", \"h\", \"h\", \"h\", \"h\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\"],\n        [\".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \"X\", \"h\", \"h\", \"h\", \"h\", \"h\", \"h\", \"X\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\"],\n        [\"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"h\", \"h\", \"h\", \"h\", \"h\", \"h\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\"],\n        [\"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\"],\n        [\"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\"],\n        [\"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\"],\n        [\"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\"],\n        [\"X\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \"X\", \"X\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \"X\"],\n        [\"X\", \".\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\"],\n        [\"X\", \".\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\"],\n        [\"X\", \"O\", \".\", \".\", \"X\", \"X\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \"X\", \"X\", \".\", \".\", \"O\", \"X\"],\n        [\"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\"],\n        [\"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\"],\n        [\"X\", \".\", \".\", \".\", \".\", \".\", \".\", \"X\", \"X\", \".\", \".\", \".\", \".\", \"X\", \"X\", \".\", \".\", \".\", \".\", \"X\", \"X\", \".\", \".\", \".\", \".\", \".\", \".\", \"X\"],\n        [\"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\"],\n        [\"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\", \"X\", \".\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \".\", \"X\"],\n        [\"X\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \"X\"],\n        [\"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\"]\n    ]\n};","let gameData = require(\"./data.json\");\nconst CANVAS_WIDTH = gameData.canvasWidth;\nconst CANVAS_HEIGHT = gameData.canvasHeight;\n\n\nexport const DIRECTION_MATRICES = {\n    'LEFT' : [-1, 0],\n    'RIGHT' : [1, 0],\n    'UP' : [0, -1],\n    'DOWN' : [0, 1]\n\n}\n\nexport function modulo(n, m) {\n    var mod = ((n % m) + m) % m;\n    return mod < 0 ? mod + Math.abs(m) : mod;\n};\n\nexport function moduloCoord(coord) {\n    return [modulo(coord[0], CANVAS_WIDTH), modulo(coord[1], CANVAS_HEIGHT)]\n};\n\nexport function getDirectionFromCoord(coord){\n    const directionObject = Object.entries(DIRECTION_MATRICES).find(([direction, directionCoord])=>{\n        return compareArrays(coord, directionCoord);\n    });\n    if (directionObject) {\n    return directionObject[0];\n    }    \n}\n    \n\nexport function addCoord(coord1, coord2) {\n    return coord1.map((value, index) => value += coord2[index]);\n};\n\nexport function substractCoord(coord1, coord2) {\n    return coord1.map((value, index) => value -= coord2[index]);\n};\n\nexport function distanceBetweenCoords(coord1, coord2) {\n    let part1 = Math.pow(coord1[0] - coord2[0], 2);\n    let part2 = Math.pow(coord1[1] - coord2[1], 2);\n    return Math.sqrt(part1 + part2);\n};\n\nexport function compareArrays(a, b){\n  // if length is not equal\n  if(a?.length != b?.length)   return false;\n\n  // comapring each element of array\n   for(var i=0;i<a.length;i++){\n   if(a[i]!=b[i]) return false;\n   }\n    return true;\n  }","import { CTX, COIN_IMAGE, PILL_IMAGE } from \"./canvas\";\nimport {compareArrays} from \"./utils\";\n\nlet gameData = require(\"./data.json\");\nconst TILE_SIZE = gameData.tileSize;\nexport default class Tile {\n  constructor(initialData, coord) {\n    //possible tileType : 'PATH', 'WALL', 'GATE', 'HOME'\n    this.tileType = \"\";\n    this.coord = coord;\n    this.hasPoint = false;\n    this.hasSuperPoint = false;\n\n    switch (initialData) {\n      case \"X\":\n        this.tileType = \"WALL\";\n        break;\n      case \".\":\n        this.tileType = \"PATH\";\n        this.hasPoint = true;\n        break;\n      case \"O\":\n        this.tileType = \"PATH\";\n        this.hasSuperPoint = true;\n        break;\n      case \"-\":\n        this.tileType = \"GATE\";\n        break;\n      case \"h\":\n        this.tileType = \"HOME\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  removePoint() {\n    this.hasPoint = false;\n    this.hasSuperPoint = false;\n  }\n\n  drawTile() {\n    if (this.hasPoint) {\n    CTX.drawImage(\n      COIN_IMAGE,\n      this.coord[0] * TILE_SIZE,\n      this.coord[1] * TILE_SIZE,\n      TILE_SIZE,\n      TILE_SIZE\n    );\n    }\n\n    if (this.hasSuperPoint) {\n      const incrementConst = 16;\n\n      CTX.drawImage(\n        PILL_IMAGE,\n        this.coord[0] * TILE_SIZE - incrementConst/2,\n        this.coord[1] * TILE_SIZE - incrementConst/2,\n        TILE_SIZE + incrementConst,\n        TILE_SIZE + incrementConst\n      );\n      }\n    }\n  }\n\n","class State {\n  constructor() {\n    this.initState();\n  }\n\n  initState() {\n    this.score = 0;\n    this.gameState = 'START';\n    this.board;\n    this.pacman;\n    this.ennemies;\n  }\n}\n\nconst STATE = new State();\nexport default {STATE};\n","import Tile from \"./tile\";\nimport { CANVAS_ELEMENT, CTX, BG_IMAGE } from \"./canvas\";\nimport { modulo, addCoord,  DIRECTION_MATRICES } from \"./utils\";\n\nimport STATE from \"./state\";\n\nlet gameData = require(\"./data.json\");\nconst BOARD_ARRAY = gameData.boardArray;\nconst BOARD_WIDTH = gameData.boardArray[0].length;\nconst BOARD_HEIGHT = gameData.boardArray.length;\nconst CANVAS_WIDTH = gameData.canvasWidth;\nconst CANVAS_HEIGHT = gameData.canvasHeight;\n\nexport default class Board {\n  constructor() {\n    this.boardTiles = [];\n    this.initBoard();\n  }\n\n  initBoard() {\n    this.boardTiles = [];\n    for (let y = 0; y < BOARD_HEIGHT; y++) {\n      let line = [];\n      for (let x = 0; x < BOARD_WIDTH; x++) {\n        let tile = new Tile(BOARD_ARRAY[y][x], [x, y]);\n        line.push(tile);\n      }\n      this.boardTiles.push(line);\n    }\n  }\n\n  getTile(coord) {\n    if (coord) {\n      let coordX = modulo(coord[0], BOARD_WIDTH);\n      let coordY = modulo(coord[1], BOARD_HEIGHT);\n      return this.boardTiles[coordY][coordX];\n    }\n  }\n\n  drawBoard() {\n    CTX.drawImage(BG_IMAGE, 0, 0, CANVAS_ELEMENT.width, CANVAS_ELEMENT.height);\n    this.drawTiles();\n  }\n\n  drawTiles() {\n    this.boardTiles.forEach((row) => {\n      row.forEach((tile) => {\n        tile.drawTile();\n      });\n    });\n  }\n\n  getNextTileInDirection(currentCoord, direction) {\n    if (!direction || !currentCoord) {\n      return false;\n    }\n\n    let directionMatrice = DIRECTION_MATRICES[direction];\n    let coordToMove = addCoord(directionMatrice, currentCoord);\n    return STATE.board.getTile(coordToMove);\n  }\n}\n","const gameData = require(\"./data.json\");\nconst ANIMATION_DURATION = gameData.animationDuration;\n\n\nimport STATE from \"./state\";\n\nimport {\n  getDirectionFromCoord,\n  compareArrays,\n  substractCoord,\n  distanceBetweenCoords\n} from \"./utils\";\n\n\nconst DIRECTIONS = ['DOWN', 'UP', 'RIGHT', 'LEFT'];\n\nexport default class EnnemyBehaviour {\n  constructor(ennemy) {\n    this.init(ennemy);\n  }\n\n  init(ennemy) {\n    this.ennemy = ennemy;\n  }\n\n\n  update(timestamp) {\n    this.updateState();\n\n    this.computePath();\n  }\n\n  updateState() {\n    switch (this.ennemy.state) {\n      case 'SPAWN':\n        if (compareArrays(this.ennemy.currentCoord, this.ennemy.targetCoord)) {\n          this.ennemy.targetCoord = this.ennemy.scatterCoord;\n          this.ennemy.state = 'SCATTER'\n        };\n        break;\n      case 'SCATTER':\n        if (compareArrays(this.ennemy.currentCoord, this.ennemy.scatterCoord)) {\n          this.ennemy.state = 'CHASE'\n        };\n        break;\n      case 'CHASE':\n        break;\n    }\n  }\n\n  computePath() {\n    // get all possible tiles for the ennemy\n    const possibleTiles = this.getPossibleTiles();\n    if (possibleTiles.length > 1 && (this.ennemy.state === 'CHASE' || this.ennemy.state === 'FLEE')) {\n      this.getTarget();\n    }\n    // Compute what is the closest possible tile to the target coord\n    let tileToMove;\n    if (this.ennemy.state === \"FLEE\") {\n      tileToMove = this.computeFarthestTileToTarget(possibleTiles);\n    }\n    else tileToMove = this.computeNearestTileToTarget(possibleTiles);\n    if (!tileToMove) return;\n\n    // Set the target coord\n    this.setMovingCoord(tileToMove.coord);\n  }\n\ngetPossibleTiles() {\n    let currentCoord = this.ennemy.currentCoord;\n    // Ennemies can't go backwards\n    let possibleDirections = DIRECTIONS.filter((dir) => dir != this.getOppositeDirection());\n    let adjacentTiles = possibleDirections.map((direction) => {\n      return STATE.board.getNextTileInDirection(currentCoord, direction);\n    });\n\n    return adjacentTiles.filter((tile) => {\n      return this.isTilePossible(tile);\n    })\n  }\n\n\n  isTilePossible(tile) {\n    if (this.ennemy.justSpawned) {\n      return ['PATH', 'GATE', 'HOME'].includes(tile.tileType);\n    }\n    return tile ?.tileType === \"PATH\";\n  }\n\n  computeNearestTileToTarget(possibleTiles) {\n    let targetCoord = this.ennemy.targetCoord;\n    let closestDistance = null;\n    let closestTile = null;\n\n    possibleTiles.forEach((tile) => {\n      let distance = distanceBetweenCoords(tile.coord, targetCoord);\n      if (closestDistance === null || distance < closestDistance) {\n        closestDistance = distance;\n        closestTile = tile;\n      }\n    });\n    return closestTile;\n  }\n\n\n  computeFarthestTileToTarget(possibleTiles) {\n    let targetCoord = this.ennemy.targetCoord;\n    let longestDistance = null;\n    let farthestTile = null;\n\n    possibleTiles.forEach((tile) => {\n      let distance = distanceBetweenCoords(tile.coord, targetCoord);\n      if (longestDistance === null || distance > longestDistance) {\n        longestDistance = distance;\n        farthestTile = tile;\n      }\n    });\n    return farthestTile;\n  }\n\n\n  getTarget() {\n    if (!this.ennemy.state === 'CHASE') return;\n    this.ennemy.justSpawned = false;\n    this.ennemy.targetCoord = STATE.pacman.movingCoord;\n  }\n\n  computeDirection() {\n    const directionCoord = substractCoord(this.ennemy.movingCoord, this.ennemy.currentCoord);\n    return getDirectionFromCoord(directionCoord);\n  }\n\n\n  getOppositeDirection(){\n    switch (this.ennemy.direction){\n      case 'UP':\n        return 'DOWN';\n        break;\n      case 'DOWN':\n        return 'UP';\n        break;\n      case 'LEFT':\n        return 'RIGHT';\n        break;\n      case 'RIGHT':\n        return 'LEFT';\n        break;\n      default:\n        return '';\n    }\n  }\n\n  setMovingCoord(coord) {\n    this.ennemy.movingCoord = coord;\n    this.ennemy.animTimestamp = new Date().getTime();\n    this.ennemy.direction = this.computeDirection();\n    window.setTimeout(() => {\n      this.ennemy.currentCoord = coord;\n    }, ANIMATION_DURATION);\n  }\n\n  setFleeMode() {\n    if (this.ennemy.state === 'SCATTER' || this.ennemy.state === 'CHASE') {\n      this.ennemy.state = 'FLEE';\n      this.direction = '';\n    }\n  }\n\n  cancelFleeMode() {\n    if (this.ennemy.state === 'FLEE') {\n      this.direction = '';\n      this.ennemy.state = 'CHASE';\n    }\n    else this.ennemy.state = 'SPAWN';\n  }\n\n  setOppositeDirection() {\n    this.ennemy.direction = this.getOppositeDirection();\n  }\n}","const gameData = require(\"./data.json\");\nconst TILE_SIZE = gameData.tileSize;\nconst SPRITE_SIZE = gameData.spriteSize;\nconst ANIMATION_DURATION = gameData.animationDuration;\nconst STEP_DURATION = gameData.stepAnimationDuration;\nconst FRAMES_STEP = gameData.framesStep;\n\nconst DIRECTIONS = ['DOWN', 'RIGHT', 'UP', 'LEFT'];\n\nimport { CTX, ENNEMY_HEAD, ENNEMY_BODY } from \"./canvas\";\n\nimport STATE from \"./state\";\n\nexport default class EnnemyAnimation {\n  constructor(ennemy) {\n    this.init(ennemy);\n  }\n\n  init(ennemy) {\n    this.ennemy = ennemy;\n    this.stepAnimationTimeStamp = null;\n    this.stepAnimation = 0;\n  }\n\n\n  draw(timestamp) {\n    if (this.characterIsOutOfScreen()) {\n      return;\n    }\n    if(!this.stepAnimationTimeStamp){\n      this.stepAnimationTimeStamp = timestamp;\n    }\n    let x, y;\n    [x, y] = this.getCoordToDraw();\n    this.drawOnCanvas(x, y, timestamp);\n  }\n\n  characterIsOutOfScreen() {\n    if (this.ennemy.movingCoord[0] === 27 && this.ennemy.currentCoord[0] === 0) {\n      return true;\n    }\n    if (this.ennemy.movingCoord[0] === 0 && this.ennemy.currentCoord[0] === 27) {\n      return true;\n    }\n    return false;\n  }\n\n  isAnimationFinished() {\n    return this.ennemy.currentCoord === this.ennemy.movingCoord;\n  }\n\n  getCoordToDraw(){\n    let x, y;\n    \n    if (this.isAnimationFinished()) {\n      return this.ennemy.currentCoord;\n    }\n    // Get the percentage of progress of the anim\n    let animationProgress = this.getProgressOfAnimation();\n\n    //Delta of the current tile and target tiles\n    let deltaX = this.ennemy.movingCoord[0] - this.ennemy.currentCoord[0];\n    let deltaY = this.ennemy.movingCoord[1] - this.ennemy.currentCoord[1];\n\n    // Position based on the progress of the animation\n    x = this.ennemy.currentCoord[0] + deltaX * animationProgress;\n    y = this.ennemy.currentCoord[1] + deltaY * animationProgress;\n\n\n    // Setting the position of the pacman\n    return [x, y];\n  }\n\n  incrementStepAnimation(timestamp){\n    this.stepAnimation++;\n    this.stepAnimation = this.stepAnimation % FRAMES_STEP;\n    this.stepAnimationTimeStamp = timestamp;\n  }\n\n  getProgressOfAnimation() {\n    let currentTimeStamp = new Date().getTime();\n    return (currentTimeStamp - this.ennemy.animTimestamp) / ANIMATION_DURATION;\n  }\n\n\n  drawOnCanvas(x, y, timestamp) {\n    let currentStepDuration = timestamp - this.stepAnimationTimeStamp;\n    if(currentStepDuration > STEP_DURATION){\n      this.incrementStepAnimation(timestamp);\n    }\n\n    this.drawBody(x, y);\n    this.drawHead(x, y);\n  }\n\n\n  drawBody(x, y){\n    const incrementConst = 6;\n\n    CTX.save();\n\n    x = x * TILE_SIZE - incrementConst / 2;\n    y = (y - 0.2) * TILE_SIZE - incrementConst / 2;\n\n    let spriteIndex = 0;\n    let stepAnimation = this.stepAnimation;\n    let isReversed = false;\n\n    if(this.ennemy.direction === 'LEFT' || this.ennemy.direction === 'RIGHT'){\n      spriteIndex = 2;\n    }\n\n    if (this.ennemy.direction === 'LEFT') {\n      isReversed = true;\n    }\n\n    if(stepAnimation > 7){\n      spriteIndex++;\n      stepAnimation = stepAnimation % 8;\n    }\n\n    if (isReversed) {\n      CTX.translate( x + TILE_SIZE, y);\n      CTX.scale(-1, 1);\n      x = 0;\n      y= 0\n    }\n\n    CTX.drawImage(\n      ENNEMY_BODY,\n      stepAnimation * SPRITE_SIZE,\n      spriteIndex * SPRITE_SIZE,\n      TILE_SIZE,\n      TILE_SIZE,\n      x,\n      y,\n      TILE_SIZE + incrementConst,\n      TILE_SIZE + incrementConst,\n    );\n\n    CTX.restore();\n\n\n  }\n\n  drawHead(x, y) {\n    const incrementConst = 6;\n\n    CTX.save();\n\n    x = x * TILE_SIZE - incrementConst / 2;\n    y = (y - 0.6) * TILE_SIZE - incrementConst / 2;\n\n      let spriteIndex = DIRECTIONS.findIndex((direction) => direction === this.ennemy.direction);\n    if (spriteIndex === -1) spriteIndex = 0;\n    let isReversed = false;\n    if (this.ennemy.direction === 'LEFT') {\n      isReversed = true;\n      spriteIndex = 1;\n    }\n\n    if (isReversed) {\n      CTX.translate( x + TILE_SIZE, y);\n      CTX.scale(-1, 1);\n      x = 0;\n      y= 0\n    }\n\n    CTX.drawImage(\n      ENNEMY_HEAD,\n      spriteIndex * SPRITE_SIZE,\n      0,\n      TILE_SIZE,\n      TILE_SIZE,\n      x,\n      y,\n      TILE_SIZE + incrementConst,\n      TILE_SIZE + incrementConst,\n    );\n\n    CTX.restore();\n  }\n}\n","import {\n  getDirectionFromCoord,\n  compareArrays,\n  substractCoord\n} from \"./utils\";\n\nimport EnnemyBehaviour from \"./ennemyBehaviour\";\nimport EnnemyAnimation from \"./ennemyAnimation\";\n\nconst gameData = require(\"./data.json\");\n\n//STATE : SPAWN, SCATTER, CHASE, FLEE, DEAD\nexport default class Ennemy {\n  constructor(coord) {\n    this.init(coord);\n    this.ennemyBehaviour = new EnnemyBehaviour(this);\n    this.ennemyAnimation = new EnnemyAnimation(this);\n  }\n\n  init(ennemyData) {\n    this.ennemyData = ennemyData;\n    // Actual coord\n    this.currentCoord = ennemyData.initialCoord;\n\n    // Coord where the pacman is moving to\n    this.movingCoord = this.currentCoord;\n\n    // Position of the gate to move to\n    this.targetCoord = ennemyData.initialTarget;\n    this.scatterCoord = ennemyData.scatterTarget;\n    this.spawnTimeout = ennemyData.spawnTimeout;\n    this.justSpawned = true;\n\n    // Timestamp fo the start of the animation\n    this.direction = \"\";\n    this.userInputDirection = \"\";\n\n\n    this.beginningGameTimestamp = null;\n    this.animTimestamp = null;\n\n    this.state = 'SPAWN';\n  }\n\n  setFleeMode() {\n    this.ennemyBehaviour.setFleeMode();\n  }\n\n  cancelFleeMode() {\n    this.ennemyBehaviour.cancelFleeMode();\n\n  }\n\n  canMove(timestamp) {\n    if (!this.beginningGameTimestamp) {\n      this.beginningGameTimestamp = timestamp;\n      return false;\n    }\n\n    return (timestamp - this.beginningGameTimestamp) > this.spawnTimeout;\n  }\n\n  setDirection(direction) {\n    this.direction = direction;\n  }\n\n\n  update(timestamp) {\n    if (!this.isAnimationFinished()) return;\n    if (!this.canMove(timestamp)) return;\n\n    this.ennemyBehaviour.update(timestamp);\n  }\n\n  isPacmanKilled(targetCoord) {\n    if (this.state === 'FLEE' || this.state === 'DEAD') return false;\n    return compareArrays(targetCoord, this.currentCoord);\n  }\n\n  isAnimationFinished() {\n    return this.currentCoord === this.movingCoord;\n  }\n\n  updateAnimation() {\n    return null;\n  }\n\n  draw(timestamp) {\n    this.ennemyAnimation.draw(timestamp);\n  }\n}","const gameData = require(\"./data.json\");\nconst ANIMATION_DURATION = gameData.animationDuration;\nconst POWERUP_DURATION = gameData.powerUpDuration;\n\n\nimport STATE from \"./state\";\n\nexport default class PacmanBehaviour {\n  constructor(pacman) {\n    this.init(pacman);\n  }\n\n  init(pacman) {\n    this.pacman = pacman;\n  }\n\n\n  update() {\n    this.processTile();\n    // If animation still happening, leave\n    let nextTile = this.computePathPacman();\n    if (nextTile) {\n      this.setMovingCoord(nextTile.coord);\n    } else {\n      // If no valid target tile, stop pacman\n      this.pacman.direction = \"\";\n    }\n  }\n\n  processTile() {\n    let currentTile = STATE.board.getTile(this.pacman.currentCoord);\n\n    if (currentTile.hasSuperPoint) {\n      this.startPowerUp();\n    }\n    if (currentTile.hasPoint || currentTile.hasSuperPoint) {\n      this.addScore(10);\n      currentTile.removePoint();\n    }\n\n  }\n\n  addScore(value) {\n    this.pacman.setScore(STATE.score + value);\n  }\n\n  startPowerUp() {  \n    this.pacman.state = \"POWERUP\";\n\n    STATE.ennemies.forEach((ennemy) => {\n      ennemy.setFleeMode();\n    })\n\n    \n    clearTimeout(this.pacman.powerupTimeout);\n    this.pacman.powerupTimeout = setTimeout(this.resetPowerUp.bind(this), POWERUP_DURATION);\n  }\n\n  resetPowerUp() {\n    if (this.pacman.state === \"POWERUP\") {\n      this.pacman.state = \"MOVING\";\n      STATE.ennemies.forEach((ennemy) => {\n        ennemy.cancelFleeMode();\n      })\n    }\n  }\n  \n  computePathPacman() {\n    // If no direction given, leave\n    if (!this.pacman.direction && !this.isUserInputValid()) {\n      return;\n    }\n\n    // Get the next tile in the user given direction\n    let nextTileUserDirection = STATE.board.getNextTileInDirection(\n      this.pacman.currentCoord,\n      this.pacman.userInputDirection\n    );\n\n    // If the user direction is valid\n    if (nextTileUserDirection?.tileType === \"PATH\") {\n      this.confirmUserDirection();\n      return nextTileUserDirection;\n    }\n\n    // Get the next tile in the initial direction\n    let nextTileCurrentDirection = STATE.board.getNextTileInDirection(\n      this.pacman.currentCoord,\n      this.pacman.direction\n    );\n\n    // If the initial direction is valid\n    if (nextTileCurrentDirection?.tileType === \"PATH\") {\n      this.setMovingCoord(nextTileCurrentDirection.coord);\n      return nextTileCurrentDirection;\n    }\n  }\n\n\n  setMovingCoord(coord) {\n    this.pacman.state = \"MOVING\";\n    this.pacman.movingCoord = coord;\n    this.pacman.animTimestamp = new Date().getTime();\n    window.setTimeout(() => {\n      this.pacman.currentCoord = coord;\n    }, ANIMATION_DURATION);\n  }\n\n\n\n  isUserInputValid(){\n    let timeSinceLastInput = new Date().getTime() - this.pacman.inputTimestamp;\n    if(timeSinceLastInput > 2000) return null;\n    return this.pacman.userInputDirection;\n  }\n\n  confirmUserDirection() {\n    this.pacman.direction = this.pacman.userInputDirection;\n  }\n\n}\n","const gameData = require(\"./data.json\");\nconst TILE_SIZE = gameData.tileSize;\nconst SPRITE_SIZE = gameData.spriteSize;\nconst ANIMATION_DURATION = gameData.animationDuration;\nconst STEP_DURATION = gameData.stepAnimationDuration;\nconst FRAMES_STEP = gameData.framesStep;\n\nimport { CTX, ISAAC_SPRITE } from \"./canvas\";\n\nimport STATE from \"./state\";\n\nexport default class PacmanAnimation {\n  constructor(pacman) {\n    this.init(pacman);\n  }\n\n  init(pacman) {\n    this.pacman = pacman;\n    this.stepAnimationTimeStamp = null;\n    this.stepAnimation = 0;\n    this.isFrameAfterDeath = false;\n  }\n\n\n  draw(timestamp) {\n    if (this.characterIsOutOfScreen()) {\n      return;\n    }\n\n    if (this.pacman.state === \"DEAD\" && !this.isFrameAfterDeath) {\n      this.isFrameAfterDeath = true;\n      this.resetAnimation(timestamp);\n    }\n\n    if(!this.stepAnimationTimeStamp){\n      this.stepAnimationTimeStamp = timestamp;\n    }\n    let x, y;\n    [x, y] = this.getCoordToDraw();\n    this.drawOnCanvas(x, y, timestamp);\n  }\n\n  resetAnimation(timestamp) {\n    this.stepAnimation = 0;\n    this.stepAnimationTimeStamp = timestamp;\n  }\n\n  characterIsOutOfScreen() {\n    if (this.pacman.movingCoord[0] === 27 && this.pacman.currentCoord[0] === 0) {\n      return true;\n    }\n    if (this.pacman.movingCoord[0] === 0 && this.pacman.currentCoord[0] === 27) {\n      return true;\n    }\n    return false;\n  }\n\n  getCoordToDraw(){\n    let x, y;\n    if (!this.pacman.direction || this.pacman.state === \"DEAD\") {\n      // If idle, set the pacman at the position of the tile\n      x = this.pacman.currentCoord[0];\n      y = this.pacman.currentCoord[1];\n    }\n    else if (this.pacman.state === \"MOVING\") {\n      // Get the percentage of progress of the anim\n      let animationProgress = this.getProgressOfAnimation();\n      //Delta of the current tile and target tiles\n      let deltaX = this.pacman.movingCoord[0] - this.pacman.currentCoord[0];\n      let deltaY = this.pacman.movingCoord[1] - this.pacman.currentCoord[1];\n\n      // Position based on the progress of the animation\n      x = this.pacman.currentCoord[0] + deltaX * animationProgress;\n      y = this.pacman.currentCoord[1] + deltaY * animationProgress;\n\n      // Setting the position of the pacman\n    }\n\n    return[x,y];\n  }\n\n  incrementStepAnimation(timestamp){\n    if (this.pacman.state === \"DEAD\" && this.stepAnimation > 2) {\n      this.stepAnimation = 3;\n      this.stepAnimationTimeStamp = timestamp;\n    }\n    else {\n      this.stepAnimation++;\n\n      this.stepAnimation = this.stepAnimation % FRAMES_STEP;\n      this.stepAnimationTimeStamp = timestamp;\n    }\n  }\n\n  getProgressOfAnimation() {\n    let currentTimeStamp = new Date().getTime();\n    return (currentTimeStamp - this.pacman.animTimestamp) / ANIMATION_DURATION;\n  }\n\n\n  drawOnCanvas(x, y, timestamp) {\n    let currentStepDuration = timestamp - this.stepAnimationTimeStamp;\n    if(currentStepDuration > STEP_DURATION){\n      this.incrementStepAnimation(timestamp);\n    }\n    if (this.pacman.state === \"DEAD\") {\n      this.drawDeath(x, y);\n    }\n    else {\n      this.drawBody(x, y);\n      this.drawHead(x, y);\n    }\n  }\n\n  drawDeath(x, y) {\n    const decalageSource = 6\n    const decalageDestination = 32;\n    const frameCoord = [\n      { x: 0, y: 3 },\n      { x: 0, y: 4 },\n      { x: 2, y: 3 },\n      { x: 3, y: 2 }]\n\n    CTX.save();\n\n    const coordX = x * TILE_SIZE - decalageDestination / 2;\n    const coordY = (y - .5)  * TILE_SIZE - decalageDestination / 2;\n    \n    CTX.drawImage(\n      ISAAC_SPRITE,\n      frameCoord[this.stepAnimation].x * SPRITE_SIZE * 2 + decalageSource,\n    frameCoord[this.stepAnimation].y * SPRITE_SIZE * 2 + decalageSource * 1.5,\n      TILE_SIZE * 2 - decalageSource * 2,\n      TILE_SIZE * 2 -decalageSource * 2,\n      coordX,\n      coordY,\n      TILE_SIZE * 2,\n      TILE_SIZE * 2,\n    );\n\n    CTX.restore();\n    \n  }\n\n\n  drawBody(x, y){\n    const incrementConst = 6;\n\n    CTX.save();\n\n    x = x * TILE_SIZE - incrementConst / 2;\n    y = (y - 0.1) * TILE_SIZE - incrementConst / 2;\n\n    let spriteIndex = 0;\n    let stepAnimation = this.stepAnimation;\n    let stepAnimationShift = 7;\n    let stepAnimationModulo = 8;\n    let isReversed = false;\n\n    if(this.pacman.direction === 'LEFT' || this.pacman.direction === 'RIGHT'){\n      spriteIndex = 2;\n      stepAnimationShift = 0;\n\n    }\n\n    if (this.pacman.direction === 'LEFT') {\n      isReversed = true;\n    }\n\n    stepAnimation += stepAnimationShift;\n\n    if(stepAnimation >= stepAnimationModulo){\n      spriteIndex++;\n      stepAnimation = stepAnimation % stepAnimationModulo;\n    }\n\n    if (isReversed) {\n      CTX.translate( x + TILE_SIZE, y);\n      CTX.scale(-1, 1);\n      x = 0;\n      y= 0\n    }\n\n    CTX.drawImage(\n      ISAAC_SPRITE,\n      stepAnimation * SPRITE_SIZE,\n      spriteIndex * SPRITE_SIZE,\n      TILE_SIZE,\n      TILE_SIZE,\n      x,\n      y,\n      TILE_SIZE + incrementConst,\n      TILE_SIZE + incrementConst,\n    );\n\n    CTX.restore();\n\n  }\n\n  drawHead(x, y) {\n    const incrementConst = 6;\n\n    CTX.save();\n\n    x = x * TILE_SIZE - incrementConst / 2;\n    y = (y - 0.50) * TILE_SIZE - incrementConst / 2;\n\n    let spriteIndex = 0;\n    let stepAnimation = this.stepAnimation >= 8 ? 1 : 0;\n    let isReversed = false;\n    let stepAnimationShift = 0;\n\n    if (this.pacman.direction === 'UP') {\n      stepAnimationShift = 4;\n    }\n    if (this.pacman.direction === 'RIGHT') {\n      stepAnimationShift = 2;\n    }\n    if (this.pacman.direction === 'LEFT') {\n      stepAnimationShift = 2;\n      isReversed = true;\n    }\n\n\n\n    stepAnimation += stepAnimationShift;\n\n    if (isReversed) {\n      CTX.translate( x + TILE_SIZE, y);\n      CTX.scale(-1, 1);\n      x = 0;\n      y= 0\n    }\n\n    CTX.drawImage(\n      ISAAC_SPRITE,\n      stepAnimation * SPRITE_SIZE,\n      0,\n      TILE_SIZE,\n      TILE_SIZE,\n      x,\n      y,\n      TILE_SIZE + incrementConst,\n      TILE_SIZE + incrementConst,\n    );\n\n    CTX.restore();\n  }\n}\n","import { SCORE_ELEMENT } from \"./canvas\";\n\nimport PacmanBehaviour from \"./pacmanBehaviour\";\nimport PacmanAnimation from \"./pacmanAnimation\";\n\nimport STATE from \"./state\";\n\nconst gameData = require(\"./data.json\");\nconst TILE_SIZE = gameData.tileSize;\nconst SPRITE_SIZE = gameData.spriteSize;\nconst ANIMATION_DURATION = gameData.animationDuration;\nconst STEP_DURATION = gameData.stepAnimationDuration;\nconst FRAMES_STEP = gameData.framesStep;\nexport default class Pacman {\n  constructor(coord) {\n    this.init(coord);\n    this.pacmanBehaviour = new PacmanBehaviour(this);\n    this.pacmanAnimation = new PacmanAnimation(this);\n  }\n\n  init(coord = [1, 14]) {\n    // Actual coord of the pacman\n  this.currentCoord = coord;\n\n    // Coord where the pacman is moving to\n  this.movingCoord = coord;\n\n    // Possible state : MOVING, POWERUP, DEAD\n\n    // Timestamp fo the start of the animation\n\n    this.direction = \"\";\n\n    this.userInputDirection = \"\";\n    this.inputTimestamp = null;\n    this.powerupTimeout;\n  }\n\n\n  update() {\n    if (!this.isAnimationFinished()) {\n      return;\n    }\n\n    this.pacmanBehaviour.update();\n  }\n\n  \n  \n\n  setScore(score) {\n    STATE.score = score;\n    SCORE_ELEMENT.textContent = STATE.score;\n  }\n\n  setUserInputDirection(direction) {\n    this.userInputDirection = direction;\n    this.inputTimestamp = new Date().getTime();\n  }\n\n  isAnimationFinished() {\n    return this.currentCoord === this.movingCoord;\n  }\n\n  setDead() {\n    this.state = \"DEAD\";\n  }\n\n  draw(timestamp) {\n    this.pacmanAnimation.draw(timestamp);\n  }\n\n}\n","import Board from \"./board\";\nimport {\n  CANVAS_ELEMENT,\n  CTX\n} from \"./canvas\";\nimport Ennemy from \"./ennemy\";\nimport Pacman from \"./pacman\";\nimport Tile from \"./tile\";\nimport STATE from \"./state\";\n\nconst gameData = require(\"./data.json\");\nconst ENNEMIES_DATA = gameData.ennemiesData;\nconst DIRECTIONS = ['DOWN', 'UP', 'RIGHT', 'LEFT'];\n\nimport {\n  modulo,\n  DIRECTION_MATRICES,\n  addCoord,\n  distanceBetweenCoords\n} from \"./utils\";\n\nexport default class Game {\n  constructor() {\n\n    STATE.score = 0;\n    // Possible state : STOPPED, START, GAME, CHASE\n    STATE.gameState = \"START\";\n\n    this.initGame();\n  }\n\n  initGame() {\n    STATE.board = new Board();\n    STATE.pacman = new Pacman();\n    STATE.ennemies = this.initEnnemies();\n\n    // START, END\n    STATE.gameState = 'START';\n\n    this.draw();\n  }\n\n  startGameLoop() {\n    this.bindEventHandler();\n    window.requestAnimationFrame(this.loop.bind(this));\n  }\n\n  loop(timestamp) {\n    let progress = timestamp - this.lastRender;\n    this.lastRender = timestamp;\n\n    this.draw(progress, timestamp);\n    this.update(progress, timestamp);\n\n    window.requestAnimationFrame(this.loop.bind(this));\n  }\n\n  update(progress, timestamp) {\n    // Update the state of the world for the elapsed time since last render\n    this.updateGameState();\n    if (STATE.gameState !== 'END') {\n      STATE.pacman.update();\n      this.updateEnnemies(timestamp);\n    }\n  }\n  \n  updateGameState() {\n    if (this.isPacmanDead()) {\n      STATE.pacman.setDead();\n      STATE.gameState = 'END';\n    }\n  }\n\n\n  isPacmanDead() {\n    let pacmanIsDead = false;\n    ennemyLoop : for (let i = 0; i < STATE.ennemies.length; i++){\n      let ennemy = STATE.ennemies[i];\n      if (ennemy.isPacmanKilled(STATE.pacman.currentCoord)) {\n        pacmanIsDead = true;\n        break ennemyLoop;\n      }\n    }\n    return pacmanIsDead;    \n  }\n\n  draw(progress, timestamp) {\n    // Reinit the canvas\n    CTX.fillStyle = \"#2c2a2a\";\n    CTX.fillRect(0, 0, CANVAS_ELEMENT.width, CANVAS_ELEMENT.height);\n    // Update the state of the world for the elapsed time since last render\n    STATE.board.drawBoard();\n    this.drawEnnemies(timestamp);\n    STATE.pacman.draw(timestamp);\n  }\n\n\n  ////////////////////////////////////\n  // GHOSTS\n  ////////////////////////////////////\n  initEnnemies() {\n    const ennemies = [];\n    ENNEMIES_DATA.forEach((ennemyData) => {\n      ennemies.push(new Ennemy(ennemyData));\n    });\n    return ennemies;\n  }\n\n  updateEnnemies(timestamp) {\n    STATE.ennemies.forEach((ennemy) => {\n      ennemy.update(timestamp);\n    });\n  }\n\n  drawEnnemies(timestamp) {\n    STATE.ennemies.forEach((ennemy) => {\n      ennemy.draw(timestamp);\n    });\n  }\n\n\n  bindEventHandler() {\n    document.addEventListener(\"keydown\", this.keydownEventHandler.bind(this));\n  }\n\n  unbindEventHandler() {\n    document.removeEventListener(\"keydown\", this.keydownEventHandler);\n  }\n\n  keydownEventHandler(event) {\n    let keycode = event.which;\n\n    // LEFT : ARROW_LEFT or Q\n    if (keycode === 37 || keycode === 81) {\n      STATE.pacman.setUserInputDirection(\"LEFT\");\n      event.preventDefault();\n    }\n    // RIGHT : ARROW_RIGHT or D\n    if (keycode === 39 || keycode === 68) {\n      STATE.pacman.setUserInputDirection(\"RIGHT\");\n    event.preventDefault();\n    }\n    // UP : ARROW_UP or Z\n    if (keycode === 38 || keycode === 90) {\n      STATE.pacman.setUserInputDirection(\"UP\");\n    event.preventDefault();\n    }\n    // DOWN : ARROW_DOWN or S\n    if (keycode === 40 || keycode === 83) {\n      STATE.pacman.setUserInputDirection(\"DOWN\");\n    event.preventDefault();\n    }\n  }\n}","import Game from \"./game\";\n\nfunction docReady(fn) {\n    // see if DOM is already available\n    if (document.readyState === \"complete\" || document.readyState === \"interactive\") {\n        // call on next available tick\n        setTimeout(fn, 1);\n    } else {\n        document.addEventListener(\"DOMContentLoaded\", fn);\n    }\n}    \n\n\ndocReady(()=>{\n    const game = new Game();\n    game.initGame();\n    game.startGameLoop();\n})\n\n"]}